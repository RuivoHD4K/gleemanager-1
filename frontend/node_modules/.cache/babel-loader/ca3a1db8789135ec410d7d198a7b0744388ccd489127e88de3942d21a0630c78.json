{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\UserManagement\\\\UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UserManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    role: \"user\"\n  });\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [newUserData, setNewUserData] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    role: \"user\"\n  });\n  const navigate = useNavigate();\n\n  // Fetch users on component mount\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Update form data when a user is selected\n  useEffect(() => {\n    if (selectedUser) {\n      setFormData({\n        email: selectedUser.email,\n        username: selectedUser.username || \"\",\n        role: selectedUser.role || \"user\"\n      });\n    }\n  }, [selectedUser]);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:5000/users\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"isAuthenticated\");\n          navigate(\"/login\");\n          throw new Error(\"Your session has expired. Please log in again.\");\n        }\n        throw new Error(\"Failed to fetch users\");\n      }\n      const data = await response.json();\n      setUsers(data);\n\n      // Select first user by default if available\n      if (data.length > 0 && !selectedUser) {\n        setSelectedUser(data[0]);\n      }\n    } catch (err) {\n      showNotification(err.message, \"error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleNewUserInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewUserData({\n      ...newUserData,\n      [name]: value\n    });\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n  };\n  const generateRandomPassword = () => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n    let password = \"\";\n    for (let i = 0; i < 10; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return password;\n  };\n  const handleGeneratePassword = async () => {\n    if (!selectedUser) return;\n    const newPass = generateRandomPassword();\n    setNewPassword(newPass);\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}/password`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          password: newPass\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update password\");\n      }\n\n      // The server will set mustChangePassword to true for admin password resets\n\n      // Update user list to reflect the change\n      const updatedUser = {\n        ...selectedUser,\n        mustChangePassword: true\n      };\n      setUsers(users.map(user => user.userId === selectedUser.userId ? updatedUser : user));\n      setSelectedUser(updatedUser);\n      setShowPasswordModal(true);\n    } catch (err) {\n      showNotification(\"Failed to update password: \" + err.message, \"error\");\n    }\n  };\n  const handleCreateNewUser = () => {\n    // Reset form data\n    setNewUserData({\n      email: \"\",\n      username: \"\",\n      password: generateRandomPassword(),\n      // Generate a random initial password\n      role: \"user\"\n    });\n    setShowAddUserModal(true);\n  };\n  const handleAddNewUser = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!newUserData.email || !newUserData.password || !newUserData.username) {\n      showNotification(\"All fields are required\", \"error\");\n      return;\n    }\n    if (newUserData.password.length < 8) {\n      showNotification(\"Password must be at least 8 characters long\", \"error\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email: newUserData.email,\n          password: newUserData.password,\n          username: newUserData.username,\n          role: newUserData.role,\n          createdAt: new Date().toISOString(),\n          mustChangePassword: true // New users must change password on first login\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to create user\");\n      }\n      const result = await response.json();\n\n      // Add new user to state\n      const newUser = result.user;\n      setUsers([...users, {\n        ...newUser,\n        mustChangePassword: true\n      }]);\n\n      // Select newly created user\n      setSelectedUser({\n        ...newUser,\n        mustChangePassword: true\n      });\n      setShowAddUserModal(false);\n      showNotification(`User ${newUserData.email} created successfully!`, \"success\");\n\n      // Refresh user list\n      fetchUsers();\n    } catch (err) {\n      showNotification(\"Failed to create user: \" + err.message, \"error\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedUser) return;\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...formData,\n          // Preserve the mustChangePassword flag\n          mustChangePassword: selectedUser.mustChangePassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update user\");\n      }\n\n      // Refresh user list to show updated data\n      fetchUsers();\n\n      // Update local storage if the current user was updated\n      const currentUserId = localStorage.getItem(\"userId\");\n      if (currentUserId === selectedUser.userId) {\n        localStorage.setItem(\"username\", formData.username || formData.email.split('@')[0]);\n      }\n\n      // Show success message\n      showNotification(\"User updated successfully!\", \"success\");\n    } catch (err) {\n      showNotification(\"Failed to update user: \" + err.message, \"error\");\n    }\n  };\n  const showNotification = (message, type = \"info\") => {\n    setNotification({\n      message,\n      type\n    });\n\n    // Auto-clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-indicator\",\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn\",\n          onClick: handleCreateNewUser,\n          children: \"+ New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card users-list-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list-container\",\n          children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"users-select-list\",\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleUserSelect(user),\n              className: selectedUser && selectedUser.userId === user.userId ? \"selected\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-list-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"user-email\",\n                    children: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"user-role\",\n                    children: user.role || \"user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this), user.mustChangePassword && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"password-status\",\n                    children: \"Password change required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)\n            }, user.userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card user-edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"user-edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"role\",\n              name: \"role\",\n              value: formData.role,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-status-display\",\n            children: selectedUser.mustChangePassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-change-required\",\n              children: \"Password change required on next login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-status-ok\",\n              children: \"Password status: OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"action-btn save-btn\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"action-btn password-btn\",\n              onClick: handleGeneratePassword,\n              children: \"Generate New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), showPasswordModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Password Generated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A new password has been generated for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 53\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-display\",\n          children: newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-note\",\n          children: \"Please copy this password now. You won't be able to view it again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), \" The user will be required to change this password on next login.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn\",\n          onClick: () => setShowPasswordModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), showAddUserModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddNewUser,\n          className: \"user-edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"new-email\",\n              name: \"email\",\n              value: newUserData.email,\n              onChange: handleNewUserInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"new-username\",\n              name: \"username\",\n              value: newUserData.username,\n              onChange: handleNewUserInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\" // Text to make it visible\n              ,\n              id: \"new-password\",\n              name: \"password\",\n              value: newUserData.password,\n              onChange: handleNewUserInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form-help\",\n              children: \"Password must be at least 8 characters long. The user will be required to change this password on first login.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"new-role\",\n              name: \"role\",\n              value: newUserData.role,\n              onChange: handleNewUserInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"action-btn save-btn\",\n              children: \"Create User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"action-btn password-btn\",\n              onClick: () => setShowAddUserModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"RtYWuS7dduOf4MEf15ihwxV+CuE=\", false, function () {\n  return [useNavigate];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","loading","setLoading","notification","setNotification","selectedUser","setSelectedUser","formData","setFormData","email","username","role","showPasswordModal","setShowPasswordModal","newPassword","setNewPassword","showAddUserModal","setShowAddUserModal","newUserData","setNewUserData","password","navigate","fetchUsers","token","localStorage","getItem","response","fetch","headers","ok","status","removeItem","Error","data","json","length","err","showNotification","message","handleInputChange","e","name","value","target","handleNewUserInputChange","handleUserSelect","user","generateRandomPassword","chars","i","charAt","Math","floor","random","handleGeneratePassword","newPass","userId","method","body","JSON","stringify","updatedUser","mustChangePassword","map","handleCreateNewUser","handleAddNewUser","preventDefault","createdAt","Date","toISOString","result","newUser","handleSubmit","currentUserId","setItem","split","type","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/pages/UserManagement/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./UserManagement.css\";\r\n\r\nconst UserManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    role: \"user\"\r\n  });\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\r\n  const [newUserData, setNewUserData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    role: \"user\"\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch users on component mount\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Update form data when a user is selected\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      setFormData({\r\n        email: selectedUser.email,\r\n        username: selectedUser.username || \"\",\r\n        role: selectedUser.role || \"user\"\r\n      });\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(\"http://localhost:5000/users\", {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem(\"authToken\");\r\n          localStorage.removeItem(\"isAuthenticated\");\r\n          navigate(\"/login\");\r\n          throw new Error(\"Your session has expired. Please log in again.\");\r\n        }\r\n        throw new Error(\"Failed to fetch users\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setUsers(data);\r\n      \r\n      // Select first user by default if available\r\n      if (data.length > 0 && !selectedUser) {\r\n        setSelectedUser(data[0]);\r\n      }\r\n    } catch (err) {\r\n      showNotification(err.message, \"error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleNewUserInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewUserData({\r\n      ...newUserData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleUserSelect = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const generateRandomPassword = () => {\r\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\r\n    let password = \"\";\r\n    for (let i = 0; i < 10; i++) {\r\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return password;\r\n  };\r\n\r\n  const handleGeneratePassword = async () => {\r\n    if (!selectedUser) return;\r\n    \r\n    const newPass = generateRandomPassword();\r\n    setNewPassword(newPass);\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}/password`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ password: newPass })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update password\");\r\n      }\r\n      \r\n      // The server will set mustChangePassword to true for admin password resets\r\n      \r\n      // Update user list to reflect the change\r\n      const updatedUser = {...selectedUser, mustChangePassword: true};\r\n      setUsers(users.map(user => \r\n        user.userId === selectedUser.userId ? updatedUser : user\r\n      ));\r\n      setSelectedUser(updatedUser);\r\n      \r\n      setShowPasswordModal(true);\r\n    } catch (err) {\r\n      showNotification(\"Failed to update password: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleCreateNewUser = () => {\r\n    // Reset form data\r\n    setNewUserData({\r\n      email: \"\",\r\n      username: \"\",\r\n      password: generateRandomPassword(), // Generate a random initial password\r\n      role: \"user\"\r\n    });\r\n    setShowAddUserModal(true);\r\n  };\r\n\r\n  const handleAddNewUser = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Basic validation\r\n    if (!newUserData.email || !newUserData.password || !newUserData.username) {\r\n      showNotification(\"All fields are required\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    if (newUserData.password.length < 8) {\r\n      showNotification(\"Password must be at least 8 characters long\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          email: newUserData.email,\r\n          password: newUserData.password,\r\n          username: newUserData.username,\r\n          role: newUserData.role,\r\n          createdAt: new Date().toISOString(),\r\n          mustChangePassword: true // New users must change password on first login\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to create user\");\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      // Add new user to state\r\n      const newUser = result.user;\r\n      setUsers([...users, {...newUser, mustChangePassword: true}]);\r\n      \r\n      // Select newly created user\r\n      setSelectedUser({...newUser, mustChangePassword: true});\r\n      \r\n      setShowAddUserModal(false);\r\n      showNotification(`User ${newUserData.email} created successfully!`, \"success\");\r\n      \r\n      // Refresh user list\r\n      fetchUsers();\r\n    } catch (err) {\r\n      showNotification(\"Failed to create user: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedUser) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          // Preserve the mustChangePassword flag\r\n          mustChangePassword: selectedUser.mustChangePassword\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update user\");\r\n      }\r\n      \r\n      // Refresh user list to show updated data\r\n      fetchUsers();\r\n      \r\n      // Update local storage if the current user was updated\r\n      const currentUserId = localStorage.getItem(\"userId\");\r\n      if (currentUserId === selectedUser.userId) {\r\n        localStorage.setItem(\"username\", formData.username || formData.email.split('@')[0]);\r\n      }\r\n      \r\n      // Show success message\r\n      showNotification(\"User updated successfully!\", \"success\");\r\n    } catch (err) {\r\n      showNotification(\"Failed to update user: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const showNotification = (message, type = \"info\") => {\r\n    setNotification({ message, type });\r\n    \r\n    // Auto-clear notification after 5 seconds\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  if (loading) return <div className=\"loading-indicator\">Loading users...</div>;\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <div className=\"page-header\">\r\n        <h1>User Management</h1>\r\n        <div className=\"page-actions\">\r\n          <button className=\"action-btn\" onClick={handleCreateNewUser}>\r\n            + New User\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"user-management-grid\">\r\n        {/* Users list card */}\r\n        <div className=\"dashboard-card users-list-card\">\r\n          <h3>Users</h3>\r\n          <div className=\"users-list-container\">\r\n            {users.length === 0 ? (\r\n              <p>No users found</p>\r\n            ) : (\r\n              <ul className=\"users-select-list\">\r\n                {users.map((user) => (\r\n                  <li \r\n                    key={user.userId} \r\n                    onClick={() => handleUserSelect(user)}\r\n                    className={selectedUser && selectedUser.userId === user.userId ? \"selected\" : \"\"}\r\n                  >\r\n                    <div className=\"user-list-item\">\r\n                      <div className=\"user-info\">\r\n                        <span className=\"user-email\">{user.email}</span>\r\n                        <span className=\"user-role\">{user.role || \"user\"}</span>\r\n                        {user.mustChangePassword && (\r\n                          <span className=\"password-status\">Password change required</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* User edit form card */}\r\n        <div className=\"dashboard-card user-edit-card\">\r\n          <h3>Edit User</h3>\r\n          {selectedUser ? (\r\n            <form onSubmit={handleSubmit} className=\"user-edit-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"role\">Role</label>\r\n                <select\r\n                  id=\"role\"\r\n                  name=\"role\"\r\n                  value={formData.role}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"user\">User</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"password-status-display\">\r\n                {selectedUser.mustChangePassword ? (\r\n                  <div className=\"password-change-required\">\r\n                    Password change required on next login\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"password-status-ok\">\r\n                    Password status: OK\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"action-btn save-btn\">\r\n                  Save Changes\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"action-btn password-btn\"\r\n                  onClick={handleGeneratePassword}\r\n                >\r\n                  Generate New Password\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <p>Select a user to edit</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Password modal popup */}\r\n      {showPasswordModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>New Password Generated</h3>\r\n            <p>\r\n              A new password has been generated for <strong>{selectedUser.email}</strong>:\r\n            </p>\r\n            <div className=\"password-display\">\r\n              {newPassword}\r\n            </div>\r\n            <p className=\"modal-note\">\r\n              Please copy this password now. You won't be able to view it again.\r\n            </p>\r\n            <p className=\"modal-note\">\r\n              <strong>Note:</strong> The user will be required to change this password on next login.\r\n            </p>\r\n            <button \r\n              className=\"action-btn\"\r\n              onClick={() => setShowPasswordModal(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add User Modal */}\r\n      {showAddUserModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>Add New User</h3>\r\n            <form onSubmit={handleAddNewUser} className=\"user-edit-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"new-email\"\r\n                  name=\"email\"\r\n                  value={newUserData.email}\r\n                  onChange={handleNewUserInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"new-username\"\r\n                  name=\"username\"\r\n                  value={newUserData.username}\r\n                  onChange={handleNewUserInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-password\">Password</label>\r\n                <input\r\n                  type=\"text\" // Text to make it visible\r\n                  id=\"new-password\"\r\n                  name=\"password\"\r\n                  value={newUserData.password}\r\n                  onChange={handleNewUserInputChange}\r\n                  required\r\n                />\r\n                <p className=\"form-help\">\r\n                  Password must be at least 8 characters long. \r\n                  The user will be required to change this password on first login.\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-role\">Role</label>\r\n                <select\r\n                  id=\"new-role\"\r\n                  name=\"role\"\r\n                  value={newUserData.role}\r\n                  onChange={handleNewUserInputChange}\r\n                >\r\n                  <option value=\"user\">User</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"action-btn save-btn\">\r\n                  Create User\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"action-btn password-btn\"\r\n                  onClick={() => setShowAddUserModal(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}