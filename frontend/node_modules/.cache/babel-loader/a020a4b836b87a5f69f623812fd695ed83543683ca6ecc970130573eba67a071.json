{"ast":null,"code":"var _jsxFileName = \"C:\\\\projeto\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  // User data states\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    role: '',\n    userId: '',\n    createdAt: ''\n  });\n\n  // Form states\n  const [usernameForm, setUsernameForm] = useState({\n    username: ''\n  });\n  const [passwordForm, setPasswordForm] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  // Load user data on component mount\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    const email = localStorage.getItem('userEmail');\n    const username = localStorage.getItem('username');\n    const role = localStorage.getItem('userRole');\n    if (!userId || !email) {\n      navigate('/login');\n      return;\n    }\n    setUserData({\n      email,\n      username: username || email.split('@')[0],\n      role: role || 'user',\n      userId\n    });\n    setUsernameForm({\n      username: username || email.split('@')[0]\n    });\n\n    // Fetch additional user data from API\n    fetchUserData(userId);\n  }, [navigate]);\n  const fetchUserData = async userId => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 404) {\n          // If user not found, just use the data from localStorage\n          // No need to show an error\n          return;\n        }\n        throw new Error('Failed to fetch user data');\n      }\n      const data = await response.json();\n      setUserData(prevData => ({\n        ...prevData,\n        ...data,\n        username: data.username || prevData.username\n      }));\n      setUsernameForm(prevForm => ({\n        username: data.username || prevForm.username\n      }));\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      // Don't show notification for fetch errors, just use localStorage data\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUsernameChange = e => {\n    setUsernameForm({\n      ...usernameForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    setPasswordForm({\n      ...passwordForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const updateUsername = async e => {\n    e.preventDefault();\n    if (!usernameForm.username.trim()) {\n      showNotification('Username cannot be empty', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username: usernameForm.username,\n          email: userData.email,\n          role: userData.role\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update username');\n      }\n\n      // Update localStorage with new username\n      localStorage.setItem('username', usernameForm.username);\n\n      // Update userData state\n      setUserData({\n        ...userData,\n        username: usernameForm.username\n      });\n      showNotification('Username updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating username:', error);\n      showNotification('Error updating username', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updatePassword = async e => {\n    e.preventDefault();\n\n    // Validation\n    if (!passwordForm.currentPassword) {\n      showNotification('Current password is required', 'error');\n      return;\n    }\n    if (!passwordForm.newPassword) {\n      showNotification('New password is required', 'error');\n      return;\n    }\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\n      showNotification('New passwords do not match', 'error');\n      return;\n    }\n    if (passwordForm.newPassword.length < 8) {\n      showNotification('Password must be at least 8 characters long', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Call the API endpoint to update password\n      const token = localStorage.getItem('authToken');\n\n      // Since you may not have a specific endpoint for password update,\n      // adapt this to match your actual API structure\n      // Option 1: If there's a dedicated password update endpoint\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}/password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          password: passwordForm.newPassword\n        })\n      });\n\n      // Handle the response\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to update password');\n      }\n\n      // Clear password form\n      setPasswordForm({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      });\n      showNotification('Password updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating password:', error);\n      showNotification(error.message || 'Error updating password', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const showNotification = (message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n\n    // Auto-clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card profile-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-indicator\",\n          children: \"Loading user data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-large\",\n              style: {\n                backgroundColor: userData.role === 'admin' ? '#f85444' : '#ff9a3c'\n              },\n              children: userData.username ? userData.username[0].toUpperCase() : '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-role-badge\",\n              children: userData.role === 'admin' ? 'Administrator' : 'Standard User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-value\",\n              children: userData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-label\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-value\",\n              children: userData.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-label\",\n              children: \"User ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-value user-id\",\n              children: userData.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), userData.createdAt && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Joined:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value\",\n                children: new Date(userData.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateUsername,\n          className: \"profile-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: usernameForm.username,\n              onChange: handleUsernameChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form-help\",\n              children: \"This name will be displayed throughout the application.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"action-btn\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Update Username'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updatePassword,\n          className: \"profile-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              name: \"currentPassword\",\n              value: passwordForm.currentPassword,\n              onChange: handlePasswordChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              name: \"newPassword\",\n              value: passwordForm.newPassword,\n              onChange: handlePasswordChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form-help\",\n              children: \"Password must be at least 8 characters long.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              value: passwordForm.confirmPassword,\n              onChange: handlePasswordChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"action-btn\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Change Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"T2anGWemomQ7DM2CFhnSrD66wEM=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","loading","setLoading","notification","setNotification","userData","setUserData","email","username","role","userId","createdAt","usernameForm","setUsernameForm","passwordForm","setPasswordForm","currentPassword","newPassword","confirmPassword","localStorage","getItem","split","fetchUserData","token","response","fetch","headers","ok","status","Error","data","json","prevData","prevForm","error","console","handleUsernameChange","e","target","name","value","handlePasswordChange","updateUsername","preventDefault","trim","showNotification","method","body","JSON","stringify","setItem","updatePassword","length","password","message","type","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","toUpperCase","Date","toLocaleDateString","onSubmit","htmlFor","id","onChange","disabled","required","_c","$RefreshReg$"],"sources":["C:/projeto/gleemanager-1/frontend/src/pages/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [notification, setNotification] = useState(null);\r\n  \r\n  // User data states\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    username: '',\r\n    role: '',\r\n    userId: '',\r\n    createdAt: ''\r\n  });\r\n  \r\n  // Form states\r\n  const [usernameForm, setUsernameForm] = useState({\r\n    username: ''\r\n  });\r\n  \r\n  const [passwordForm, setPasswordForm] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  \r\n  // Load user data on component mount\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem('userId');\r\n    const email = localStorage.getItem('userEmail');\r\n    const username = localStorage.getItem('username');\r\n    const role = localStorage.getItem('userRole');\r\n    \r\n    if (!userId || !email) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    setUserData({\r\n      email,\r\n      username: username || email.split('@')[0],\r\n      role: role || 'user',\r\n      userId\r\n    });\r\n    \r\n    setUsernameForm({\r\n      username: username || email.split('@')[0]\r\n    });\r\n    \r\n    // Fetch additional user data from API\r\n    fetchUserData(userId);\r\n  }, [navigate]);\r\n  \r\n  const fetchUserData = async (userId) => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          // If user not found, just use the data from localStorage\r\n          // No need to show an error\r\n          return;\r\n        }\r\n        throw new Error('Failed to fetch user data');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setUserData(prevData => ({\r\n        ...prevData,\r\n        ...data,\r\n        username: data.username || prevData.username\r\n      }));\r\n      \r\n      setUsernameForm(prevForm => ({\r\n        username: data.username || prevForm.username\r\n      }));\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      // Don't show notification for fetch errors, just use localStorage data\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleUsernameChange = (e) => {\r\n    setUsernameForm({\r\n      ...usernameForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  \r\n  const handlePasswordChange = (e) => {\r\n    setPasswordForm({\r\n      ...passwordForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  \r\n  const updateUsername = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!usernameForm.username.trim()) {\r\n      showNotification('Username cannot be empty', 'error');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          username: usernameForm.username,\r\n          email: userData.email,\r\n          role: userData.role\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to update username');\r\n      }\r\n      \r\n      // Update localStorage with new username\r\n      localStorage.setItem('username', usernameForm.username);\r\n      \r\n      // Update userData state\r\n      setUserData({\r\n        ...userData,\r\n        username: usernameForm.username\r\n      });\r\n      \r\n      showNotification('Username updated successfully', 'success');\r\n    } catch (error) {\r\n      console.error('Error updating username:', error);\r\n      showNotification('Error updating username', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const updatePassword = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validation\r\n    if (!passwordForm.currentPassword) {\r\n      showNotification('Current password is required', 'error');\r\n      return;\r\n    }\r\n    \r\n    if (!passwordForm.newPassword) {\r\n      showNotification('New password is required', 'error');\r\n      return;\r\n    }\r\n    \r\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\r\n      showNotification('New passwords do not match', 'error');\r\n      return;\r\n    }\r\n    \r\n    if (passwordForm.newPassword.length < 8) {\r\n      showNotification('Password must be at least 8 characters long', 'error');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      // Call the API endpoint to update password\r\n      const token = localStorage.getItem('authToken');\r\n      \r\n      // Since you may not have a specific endpoint for password update,\r\n      // adapt this to match your actual API structure\r\n      // Option 1: If there's a dedicated password update endpoint\r\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}/password`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          password: passwordForm.newPassword\r\n        })\r\n      });\r\n      \r\n      // Handle the response\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Failed to update password');\r\n      }\r\n      \r\n      // Clear password form\r\n      setPasswordForm({\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n      \r\n      showNotification('Password updated successfully', 'success');\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      showNotification(error.message || 'Error updating password', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const showNotification = (message, type = 'info') => {\r\n    setNotification({ message, type });\r\n    \r\n    // Auto-clear notification after 5 seconds\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"page-header\">\r\n        <h1>My Profile</h1>\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"profile-grid\">\r\n        {/* User information card */}\r\n        <div className=\"dashboard-card profile-card\">\r\n          <h3>User Information</h3>\r\n          {loading ? (\r\n            <div className=\"loading-indicator\">Loading user data...</div>\r\n          ) : (\r\n            <div className=\"user-details\">\r\n              <div className=\"user-avatar\">\r\n                <div \r\n                  className=\"avatar-large\"\r\n                  style={{ \r\n                    backgroundColor: userData.role === 'admin' ? '#f85444' : '#ff9a3c' \r\n                  }}\r\n                >\r\n                  {userData.username ? userData.username[0].toUpperCase() : '?'}\r\n                </div>\r\n                <div className=\"user-role-badge\">\r\n                  {userData.role === 'admin' ? 'Administrator' : 'Standard User'}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"user-info-grid\">\r\n                <div className=\"info-label\">Email:</div>\r\n                <div className=\"info-value\">{userData.email}</div>\r\n                \r\n                <div className=\"info-label\">Username:</div>\r\n                <div className=\"info-value\">{userData.username}</div>\r\n                \r\n                <div className=\"info-label\">User ID:</div>\r\n                <div className=\"info-value user-id\">{userData.userId}</div>\r\n                \r\n                {userData.createdAt && (\r\n                  <>\r\n                    <div className=\"info-label\">Joined:</div>\r\n                    <div className=\"info-value\">\r\n                      {new Date(userData.createdAt).toLocaleDateString()}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Update username card */}\r\n        <div className=\"dashboard-card edit-card\">\r\n          <h3>Update Username</h3>\r\n          <form onSubmit={updateUsername} className=\"profile-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                value={usernameForm.username}\r\n                onChange={handleUsernameChange}\r\n                disabled={loading}\r\n                required\r\n              />\r\n              <p className=\"form-help\">This name will be displayed throughout the application.</p>\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"action-btn\" \r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Updating...' : 'Update Username'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n        \r\n        {/* Change password card */}\r\n        <div className=\"dashboard-card edit-card\">\r\n          <h3>Change Password</h3>\r\n          <form onSubmit={updatePassword} className=\"profile-form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"currentPassword\">Current Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"currentPassword\"\r\n                name=\"currentPassword\"\r\n                value={passwordForm.currentPassword}\r\n                onChange={handlePasswordChange}\r\n                disabled={loading}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"newPassword\">New Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"newPassword\"\r\n                name=\"newPassword\"\r\n                value={passwordForm.newPassword}\r\n                onChange={handlePasswordChange}\r\n                disabled={loading}\r\n                required\r\n              />\r\n              <p className=\"form-help\">Password must be at least 8 characters long.</p>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                value={passwordForm.confirmPassword}\r\n                onChange={handlePasswordChange}\r\n                disabled={loading}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"action-btn\" \r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Updating...' : 'Change Password'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAC/CiB,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC;IAC/CyB,eAAe,EAAE,EAAE;IACnBC,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE;EACnB,CAAC,CAAC;;EAEF;EACA1B,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGS,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMb,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMZ,QAAQ,GAAGW,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,MAAMX,IAAI,GAAGU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE7C,IAAI,CAACV,MAAM,IAAI,CAACH,KAAK,EAAE;MACrBP,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEAM,WAAW,CAAC;MACVC,KAAK;MACLC,QAAQ,EAAEA,QAAQ,IAAID,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzCZ,IAAI,EAAEA,IAAI,IAAI,MAAM;MACpBC;IACF,CAAC,CAAC;IAEFG,eAAe,CAAC;MACdL,QAAQ,EAAEA,QAAQ,IAAID,KAAK,CAACc,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;;IAEF;IACAC,aAAa,CAACZ,MAAM,CAAC;EACvB,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAMsB,aAAa,GAAG,MAAOZ,MAAM,IAAK;IACtCR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMqB,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+Bf,MAAM,EAAE,EAAE;QACpEgB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUH,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;QAChB,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UAC3B;UACA;UACA;QACF;QACA,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCzB,WAAW,CAAC0B,QAAQ,KAAK;QACvB,GAAGA,QAAQ;QACX,GAAGF,IAAI;QACPtB,QAAQ,EAAEsB,IAAI,CAACtB,QAAQ,IAAIwB,QAAQ,CAACxB;MACtC,CAAC,CAAC,CAAC;MAEHK,eAAe,CAACoB,QAAQ,KAAK;QAC3BzB,QAAQ,EAAEsB,IAAI,CAACtB,QAAQ,IAAIyB,QAAQ,CAACzB;MACtC,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC,SAAS;MACRhC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,oBAAoB,GAAIC,CAAC,IAAK;IAClCxB,eAAe,CAAC;MACd,GAAGD,YAAY;MACf,CAACyB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,oBAAoB,GAAIJ,CAAC,IAAK;IAClCtB,eAAe,CAAC;MACd,GAAGD,YAAY;MACf,CAACuB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,cAAc,GAAG,MAAOL,CAAC,IAAK;IAClCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC/B,YAAY,CAACJ,QAAQ,CAACoC,IAAI,CAAC,CAAC,EAAE;MACjCC,gBAAgB,CAAC,0BAA0B,EAAE,OAAO,CAAC;MACrD;IACF;IAEA3C,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMqB,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BpB,QAAQ,CAACK,MAAM,EAAE,EAAE;QAC7EoC,MAAM,EAAE,KAAK;QACbpB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUH,KAAK;QAClC,CAAC;QACDwB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBzC,QAAQ,EAAEI,YAAY,CAACJ,QAAQ;UAC/BD,KAAK,EAAEF,QAAQ,CAACE,KAAK;UACrBE,IAAI,EAAEJ,QAAQ,CAACI;QACjB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACe,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;MAC9C;;MAEA;MACAV,YAAY,CAAC+B,OAAO,CAAC,UAAU,EAAEtC,YAAY,CAACJ,QAAQ,CAAC;;MAEvD;MACAF,WAAW,CAAC;QACV,GAAGD,QAAQ;QACXG,QAAQ,EAAEI,YAAY,CAACJ;MACzB,CAAC,CAAC;MAEFqC,gBAAgB,CAAC,+BAA+B,EAAE,SAAS,CAAC;IAC9D,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDW,gBAAgB,CAAC,yBAAyB,EAAE,OAAO,CAAC;IACtD,CAAC,SAAS;MACR3C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiD,cAAc,GAAG,MAAOd,CAAC,IAAK;IAClCA,CAAC,CAACM,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAAC7B,YAAY,CAACE,eAAe,EAAE;MACjC6B,gBAAgB,CAAC,8BAA8B,EAAE,OAAO,CAAC;MACzD;IACF;IAEA,IAAI,CAAC/B,YAAY,CAACG,WAAW,EAAE;MAC7B4B,gBAAgB,CAAC,0BAA0B,EAAE,OAAO,CAAC;MACrD;IACF;IAEA,IAAI/B,YAAY,CAACG,WAAW,KAAKH,YAAY,CAACI,eAAe,EAAE;MAC7D2B,gBAAgB,CAAC,4BAA4B,EAAE,OAAO,CAAC;MACvD;IACF;IAEA,IAAI/B,YAAY,CAACG,WAAW,CAACmC,MAAM,GAAG,CAAC,EAAE;MACvCP,gBAAgB,CAAC,6CAA6C,EAAE,OAAO,CAAC;MACxE;IACF;IAEA3C,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAMqB,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;;MAE/C;MACA;MACA;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BpB,QAAQ,CAACK,MAAM,WAAW,EAAE;QACtFoC,MAAM,EAAE,KAAK;QACbpB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUH,KAAK;QAClC,CAAC;QACDwB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBI,QAAQ,EAAEvC,YAAY,CAACG;QACzB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,IAAI,CAACO,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMG,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,MAAM,IAAIF,KAAK,CAACC,IAAI,CAACI,KAAK,IAAI,2BAA2B,CAAC;MAC5D;;MAEA;MACAnB,eAAe,CAAC;QACdC,eAAe,EAAE,EAAE;QACnBC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF2B,gBAAgB,CAAC,+BAA+B,EAAE,SAAS,CAAC;IAC9D,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDW,gBAAgB,CAACX,KAAK,CAACoB,OAAO,IAAI,yBAAyB,EAAE,OAAO,CAAC;IACvE,CAAC,SAAS;MACRpD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM2C,gBAAgB,GAAGA,CAACS,OAAO,EAAEC,IAAI,GAAG,MAAM,KAAK;IACnDnD,eAAe,CAAC;MAAEkD,OAAO;MAAEC;IAAK,CAAC,CAAC;;IAElC;IACAC,UAAU,CAAC,MAAM;MACfpD,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACET,OAAA;IAAK8D,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC/D,OAAA;MAAK8D,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B/D,OAAA;QAAA+D,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EAEL3D,YAAY,iBACXR,OAAA;MAAK8D,SAAS,EAAE,gBAAgBtD,YAAY,CAACoD,IAAI,EAAG;MAAAG,QAAA,EACjDvD,YAAY,CAACmD;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACN,eAEDnE,OAAA;MAAK8D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3B/D,OAAA;QAAK8D,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1C/D,OAAA;UAAA+D,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxB7D,OAAO,gBACNN,OAAA;UAAK8D,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAE7DnE,OAAA;UAAK8D,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/D,OAAA;YAAK8D,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B/D,OAAA;cACE8D,SAAS,EAAC,cAAc;cACxBM,KAAK,EAAE;gBACLC,eAAe,EAAE3D,QAAQ,CAACI,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;cAC3D,CAAE;cAAAiD,QAAA,EAEDrD,QAAQ,CAACG,QAAQ,GAAGH,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACyD,WAAW,CAAC,CAAC,GAAG;YAAG;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC,eACNnE,OAAA;cAAK8D,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAC7BrD,QAAQ,CAACI,IAAI,KAAK,OAAO,GAAG,eAAe,GAAG;YAAe;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENnE,OAAA;YAAK8D,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B/D,OAAA;cAAK8D,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxCnE,OAAA;cAAK8D,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAErD,QAAQ,CAACE;YAAK;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAElDnE,OAAA;cAAK8D,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3CnE,OAAA;cAAK8D,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAErD,QAAQ,CAACG;YAAQ;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAErDnE,OAAA;cAAK8D,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1CnE,OAAA;cAAK8D,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAErD,QAAQ,CAACK;YAAM;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAE1DzD,QAAQ,CAACM,SAAS,iBACjBhB,OAAA,CAAAE,SAAA;cAAA6D,QAAA,gBACE/D,OAAA;gBAAK8D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzCnE,OAAA;gBAAK8D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACxB,IAAIQ,IAAI,CAAC7D,QAAQ,CAACM,SAAS,CAAC,CAACwD,kBAAkB,CAAC;cAAC;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC;YAAA,eACN,CACH;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNnE,OAAA;QAAK8D,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvC/D,OAAA;UAAA+D,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBnE,OAAA;UAAMyE,QAAQ,EAAE1B,cAAe;UAACe,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACtD/D,OAAA;YAAK8D,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB/D,OAAA;cAAO0E,OAAO,EAAC,UAAU;cAAAX,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1CnE,OAAA;cACE4D,IAAI,EAAC,MAAM;cACXe,EAAE,EAAC,UAAU;cACb/B,IAAI,EAAC,UAAU;cACfC,KAAK,EAAE5B,YAAY,CAACJ,QAAS;cAC7B+D,QAAQ,EAAEnC,oBAAqB;cAC/BoC,QAAQ,EAAEvE,OAAQ;cAClBwE,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACFnE,OAAA;cAAG8D,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAuD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF,CAAC,eAENnE,OAAA;YACE4D,IAAI,EAAC,QAAQ;YACbE,SAAS,EAAC,YAAY;YACtBe,QAAQ,EAAEvE,OAAQ;YAAAyD,QAAA,EAEjBzD,OAAO,GAAG,aAAa,GAAG;UAAiB;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNnE,OAAA;QAAK8D,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvC/D,OAAA;UAAA+D,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBnE,OAAA;UAAMyE,QAAQ,EAAEjB,cAAe;UAACM,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACtD/D,OAAA;YAAK8D,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB/D,OAAA;cAAO0E,OAAO,EAAC,iBAAiB;cAAAX,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzDnE,OAAA;cACE4D,IAAI,EAAC,UAAU;cACfe,EAAE,EAAC,iBAAiB;cACpB/B,IAAI,EAAC,iBAAiB;cACtBC,KAAK,EAAE1B,YAAY,CAACE,eAAgB;cACpCuD,QAAQ,EAAE9B,oBAAqB;cAC/B+B,QAAQ,EAAEvE,OAAQ;cAClBwE,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENnE,OAAA;YAAK8D,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB/D,OAAA;cAAO0E,OAAO,EAAC,aAAa;cAAAX,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjDnE,OAAA;cACE4D,IAAI,EAAC,UAAU;cACfe,EAAE,EAAC,aAAa;cAChB/B,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAE1B,YAAY,CAACG,WAAY;cAChCsD,QAAQ,EAAE9B,oBAAqB;cAC/B+B,QAAQ,EAAEvE,OAAQ;cAClBwE,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACFnE,OAAA;cAAG8D,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAA4C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eAENnE,OAAA;YAAK8D,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB/D,OAAA;cAAO0E,OAAO,EAAC,iBAAiB;cAAAX,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7DnE,OAAA;cACE4D,IAAI,EAAC,UAAU;cACfe,EAAE,EAAC,iBAAiB;cACpB/B,IAAI,EAAC,iBAAiB;cACtBC,KAAK,EAAE1B,YAAY,CAACI,eAAgB;cACpCqD,QAAQ,EAAE9B,oBAAqB;cAC/B+B,QAAQ,EAAEvE,OAAQ;cAClBwE,QAAQ;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENnE,OAAA;YACE4D,IAAI,EAAC,QAAQ;YACbE,SAAS,EAAC,YAAY;YACtBe,QAAQ,EAAEvE,OAAQ;YAAAyD,QAAA,EAEjBzD,OAAO,GAAG,aAAa,GAAG;UAAiB;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/D,EAAA,CA7WID,OAAO;EAAA,QACML,WAAW;AAAA;AAAAiF,EAAA,GADxB5E,OAAO;AA+Wb,eAAeA,OAAO;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}