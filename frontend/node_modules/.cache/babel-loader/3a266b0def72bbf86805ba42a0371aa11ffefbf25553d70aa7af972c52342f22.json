{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  // User data states\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    role: '',\n    userId: '',\n    createdAt: ''\n  });\n\n  // Form states\n  const [usernameForm, setUsernameForm] = useState({\n    username: ''\n  });\n  const [passwordForm, setPasswordForm] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  // Load user data on component mount\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    const email = localStorage.getItem('userEmail');\n    const username = localStorage.getItem('username');\n    const role = localStorage.getItem('userRole');\n    if (!userId || !email) {\n      navigate('/login');\n      return;\n    }\n    setUserData({\n      email,\n      username: username || email.split('@')[0],\n      role: role || 'user',\n      userId\n    });\n    setUsernameForm({\n      username: username || email.split('@')[0]\n    });\n\n    // Fetch additional user data from API\n    fetchUserData(userId);\n  }, [navigate]);\n  const fetchUserData = async userId => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      const data = await response.json();\n      setUserData(prevData => ({\n        ...prevData,\n        ...data,\n        username: data.username || prevData.username\n      }));\n      setUsernameForm(prevForm => ({\n        username: data.username || prevForm.username\n      }));\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      showNotification('Error loading user data', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUsernameChange = e => {\n    setUsernameForm({\n      ...usernameForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    setPasswordForm({\n      ...passwordForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const updateUsername = async e => {\n    e.preventDefault();\n    if (!usernameForm.username.trim()) {\n      showNotification('Username cannot be empty', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username: usernameForm.username,\n          email: userData.email,\n          role: userData.role\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update username');\n      }\n\n      // Update localStorage with new username\n      localStorage.setItem('username', usernameForm.username);\n\n      // Update userData state\n      setUserData({\n        ...userData,\n        username: usernameForm.username\n      });\n      showNotification('Username updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating username:', error);\n      showNotification('Error updating username', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updatePassword = async e => {\n    e.preventDefault();\n\n    // Validation\n    if (!passwordForm.currentPassword) {\n      showNotification('Current password is required', 'error');\n      return;\n    }\n    if (!passwordForm.newPassword) {\n      showNotification('New password is required', 'error');\n      return;\n    }\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\n      showNotification('New passwords do not match', 'error');\n      return;\n    }\n    if (passwordForm.newPassword.length < 8) {\n      showNotification('Password must be at least 8 characters long', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}/password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          currentPassword: passwordForm.currentPassword,\n          newPassword: passwordForm.newPassword\n        })\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to update password');\n      }\n\n      // Clear password form\n      setPasswordForm({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      });\n      showNotification('Password updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating password:', error);\n      showNotification(error.message || 'Error updating password', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const showNotification = (message, type = 'info') => {\n    setNotification({\n      message,\n      type\n    });\n\n    // Auto-clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card profile-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-indicator\",\n          children: \"Loading user data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-large\",\n              style: {\n                backgroundColor: userData.role === 'admin' ? '#f85444' : '#ff9a3c'\n              },\n              children: userData.username ? userData.username[0].toUpperCase() : '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-role-badge\",\n              children: userData.role === 'admin' ? 'Administrator' : 'Standard User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-label\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-value\",\n              children: userData.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-label\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-value\",\n              children: userData.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-label\",\n              children: \"User ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-value user-id\",\n              children: userData.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), userData.createdAt && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-label\",\n                children: \"Joined:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-value\",\n                children: new Date(userData.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updateUsername,\n          className: \"profile-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: usernameForm.username,\n              onChange: handleUsernameChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form-help\",\n              children: \"This name will be displayed throughout the application.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"action-btn\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Update Username'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updatePassword,\n          className: \"profile-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currentPassword\",\n              children: \"Current Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"currentPassword\",\n              name: \"currentPassword\",\n              value: passwordForm.currentPassword,\n              onChange: handlePasswordChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newPassword\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"newPassword\",\n              name: \"newPassword\",\n              value: passwordForm.newPassword,\n              onChange: handlePasswordChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form-help\",\n              children: \"Password must be at least 8 characters long.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              value: passwordForm.confirmPassword,\n              onChange: handlePasswordChange,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"action-btn\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Change Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"Q60XsR/1QGFg9Os2cBqqoS0OvRw=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","loading","setLoading","notification","setNotification","userData","setUserData","email","username","role","userId","createdAt","usernameForm","setUsernameForm","passwordForm","setPasswordForm","currentPassword","newPassword","confirmPassword","localStorage","getItem","split","fetchUserData","token","response","fetch","headers","ok","Error","data","json","prevData","prevForm","error","console","showNotification","handleUsernameChange","e","target","name","value","handlePasswordChange","updateUsername","preventDefault","trim","method","body","JSON","stringify","setItem","updatePassword","length","message","type","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","toUpperCase","Date","toLocaleDateString","onSubmit","htmlFor","id","onChange","disabled","required","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/pages/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [notification, setNotification] = useState(null);\n  \n  // User data states\n  const [userData, setUserData] = useState({\n    email: '',\n    username: '',\n    role: '',\n    userId: '',\n    createdAt: ''\n  });\n  \n  // Form states\n  const [usernameForm, setUsernameForm] = useState({\n    username: ''\n  });\n  \n  const [passwordForm, setPasswordForm] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  \n  // Load user data on component mount\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    const email = localStorage.getItem('userEmail');\n    const username = localStorage.getItem('username');\n    const role = localStorage.getItem('userRole');\n    \n    if (!userId || !email) {\n      navigate('/login');\n      return;\n    }\n    \n    setUserData({\n      email,\n      username: username || email.split('@')[0],\n      role: role || 'user',\n      userId\n    });\n    \n    setUsernameForm({\n      username: username || email.split('@')[0]\n    });\n    \n    // Fetch additional user data from API\n    fetchUserData(userId);\n  }, [navigate]);\n  \n  const fetchUserData = async (userId) => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n      }\n      \n      const data = await response.json();\n      setUserData(prevData => ({\n        ...prevData,\n        ...data,\n        username: data.username || prevData.username\n      }));\n      \n      setUsernameForm(prevForm => ({\n        username: data.username || prevForm.username\n      }));\n      \n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      showNotification('Error loading user data', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleUsernameChange = (e) => {\n    setUsernameForm({\n      ...usernameForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  \n  const handlePasswordChange = (e) => {\n    setPasswordForm({\n      ...passwordForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  \n  const updateUsername = async (e) => {\n    e.preventDefault();\n    \n    if (!usernameForm.username.trim()) {\n      showNotification('Username cannot be empty', 'error');\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username: usernameForm.username,\n          email: userData.email,\n          role: userData.role\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update username');\n      }\n      \n      // Update localStorage with new username\n      localStorage.setItem('username', usernameForm.username);\n      \n      // Update userData state\n      setUserData({\n        ...userData,\n        username: usernameForm.username\n      });\n      \n      showNotification('Username updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating username:', error);\n      showNotification('Error updating username', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const updatePassword = async (e) => {\n    e.preventDefault();\n    \n    // Validation\n    if (!passwordForm.currentPassword) {\n      showNotification('Current password is required', 'error');\n      return;\n    }\n    \n    if (!passwordForm.newPassword) {\n      showNotification('New password is required', 'error');\n      return;\n    }\n    \n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\n      showNotification('New passwords do not match', 'error');\n      return;\n    }\n    \n    if (passwordForm.newPassword.length < 8) {\n      showNotification('Password must be at least 8 characters long', 'error');\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await fetch(`http://localhost:5000/users/${userData.userId}/password`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          currentPassword: passwordForm.currentPassword,\n          newPassword: passwordForm.newPassword\n        })\n      });\n      \n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to update password');\n      }\n      \n      // Clear password form\n      setPasswordForm({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      });\n      \n      showNotification('Password updated successfully', 'success');\n    } catch (error) {\n      console.error('Error updating password:', error);\n      showNotification(error.message || 'Error updating password', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const showNotification = (message, type = 'info') => {\n    setNotification({ message, type });\n    \n    // Auto-clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n  \n  return (\n    <div className=\"profile-container\">\n      <div className=\"page-header\">\n        <h1>My Profile</h1>\n      </div>\n      \n      {notification && (\n        <div className={`notification ${notification.type}`}>\n          {notification.message}\n        </div>\n      )}\n      \n      <div className=\"profile-grid\">\n        {/* User information card */}\n        <div className=\"dashboard-card profile-card\">\n          <h3>User Information</h3>\n          {loading ? (\n            <div className=\"loading-indicator\">Loading user data...</div>\n          ) : (\n            <div className=\"user-details\">\n              <div className=\"user-avatar\">\n                <div \n                  className=\"avatar-large\"\n                  style={{ \n                    backgroundColor: userData.role === 'admin' ? '#f85444' : '#ff9a3c' \n                  }}\n                >\n                  {userData.username ? userData.username[0].toUpperCase() : '?'}\n                </div>\n                <div className=\"user-role-badge\">\n                  {userData.role === 'admin' ? 'Administrator' : 'Standard User'}\n                </div>\n              </div>\n              \n              <div className=\"user-info-grid\">\n                <div className=\"info-label\">Email:</div>\n                <div className=\"info-value\">{userData.email}</div>\n                \n                <div className=\"info-label\">Username:</div>\n                <div className=\"info-value\">{userData.username}</div>\n                \n                <div className=\"info-label\">User ID:</div>\n                <div className=\"info-value user-id\">{userData.userId}</div>\n                \n                {userData.createdAt && (\n                  <>\n                    <div className=\"info-label\">Joined:</div>\n                    <div className=\"info-value\">\n                      {new Date(userData.createdAt).toLocaleDateString()}\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Update username card */}\n        <div className=\"dashboard-card edit-card\">\n          <h3>Update Username</h3>\n          <form onSubmit={updateUsername} className=\"profile-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                value={usernameForm.username}\n                onChange={handleUsernameChange}\n                disabled={loading}\n                required\n              />\n              <p className=\"form-help\">This name will be displayed throughout the application.</p>\n            </div>\n            \n            <button \n              type=\"submit\" \n              className=\"action-btn\" \n              disabled={loading}\n            >\n              {loading ? 'Updating...' : 'Update Username'}\n            </button>\n          </form>\n        </div>\n        \n        {/* Change password card */}\n        <div className=\"dashboard-card edit-card\">\n          <h3>Change Password</h3>\n          <form onSubmit={updatePassword} className=\"profile-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"currentPassword\">Current Password</label>\n              <input\n                type=\"password\"\n                id=\"currentPassword\"\n                name=\"currentPassword\"\n                value={passwordForm.currentPassword}\n                onChange={handlePasswordChange}\n                disabled={loading}\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"newPassword\">New Password</label>\n              <input\n                type=\"password\"\n                id=\"newPassword\"\n                name=\"newPassword\"\n                value={passwordForm.newPassword}\n                onChange={handlePasswordChange}\n                disabled={loading}\n                required\n              />\n              <p className=\"form-help\">Password must be at least 8 characters long.</p>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={passwordForm.confirmPassword}\n                onChange={handlePasswordChange}\n                disabled={loading}\n                required\n              />\n            </div>\n            \n            <button \n              type=\"submit\" \n              className=\"action-btn\" \n              disabled={loading}\n            >\n              {loading ? 'Updating...' : 'Change Password'}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}