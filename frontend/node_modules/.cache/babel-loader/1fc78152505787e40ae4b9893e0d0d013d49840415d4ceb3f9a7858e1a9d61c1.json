{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\AccountSwitcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AccountSwitcher.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountSwitcher = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const dropdownRef = useRef(null);\n\n  // Load saved accounts on component mount\n  useEffect(() => {\n    const loadAccounts = () => {\n      const savedAccounts = JSON.parse(localStorage.getItem('savedAccounts')) || [];\n      setAccounts(savedAccounts);\n\n      // Check if current user is logged in\n      const token = localStorage.getItem('authToken');\n      const email = localStorage.getItem('userEmail');\n      const username = localStorage.getItem('username');\n      const userId = localStorage.getItem('userId');\n      const userRole = localStorage.getItem('userRole');\n      if (token && email) {\n        setCurrentAccount({\n          email,\n          username: username || email.split('@')[0],\n          userId,\n          role: userRole || 'user'\n        });\n      } else {\n        setCurrentAccount(null);\n      }\n    };\n    loadAccounts();\n\n    // Add event listener to check for login/logout events\n    window.addEventListener('storage', loadAccounts);\n    return () => window.removeEventListener('storage', loadAccounts);\n  }, []);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Save current account\n  const saveCurrentAccount = () => {\n    if (!currentAccount) return;\n\n    // Check if account already exists\n    const existingIndex = accounts.findIndex(acc => acc.email === currentAccount.email);\n    let updatedAccounts = [...accounts];\n    if (existingIndex >= 0) {\n      // Update existing account\n      updatedAccounts[existingIndex] = currentAccount;\n    } else {\n      // Add new account\n      updatedAccounts.push(currentAccount);\n    }\n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n\n  // Remove account\n  const removeAccount = index => {\n    const updatedAccounts = accounts.filter((_, i) => i !== index);\n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n\n  // Switch to another account\n  const switchToAccount = account => {\n    // Save current account first if logged in\n    if (currentAccount) {\n      saveCurrentAccount();\n    }\n\n    // Log out current user\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('username');\n    localStorage.removeItem('isAuthenticated');\n\n    // Save the account data to sessionStorage for login page to use\n    sessionStorage.setItem('switchToAccount', JSON.stringify(account));\n\n    // Redirect to login page\n    window.location.href = '/login';\n    setIsOpen(false);\n  };\n\n  // Get initials for avatar\n  const getInitials = name => {\n    return name ? name.charAt(0).toUpperCase() : '?';\n  };\n\n  // Get background color based on user role\n  const getAvatarColor = role => {\n    switch (role) {\n      case 'admin':\n        return '#f85444';\n      default:\n        return '#ff9a3c';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-switcher-container\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"account-switcher-button\",\n      onClick: () => setIsOpen(!isOpen),\n      title: \"Account Switcher\",\n      children: currentAccount ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        style: {\n          backgroundColor: getAvatarColor(currentAccount.role)\n        },\n        children: getInitials(currentAccount.username)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar default-avatar\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), currentAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-account\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          style: {\n            backgroundColor: getAvatarColor(currentAccount.role)\n          },\n          children: getInitials(currentAccount.username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-name\",\n            children: currentAccount.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-email\",\n            children: currentAccount.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-account-btn\",\n          onClick: saveCurrentAccount,\n          title: \"Save this account\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-accounts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: \"Saved Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"accounts-list\",\n          children: accounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"account-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              style: {\n                backgroundColor: getAvatarColor(account.role)\n              },\n              children: getInitials(account.username)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account-info\",\n              onClick: () => switchToAccount(account),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-name\",\n                children: account.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-email\",\n                children: account.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-account-btn\",\n              onClick: () => removeAccount(index),\n              title: \"Remove account\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setIsOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountSwitcher, \"m0pFvD6R/vUwvSkgv70aL8RMW+E=\");\n_c = AccountSwitcher;\nexport default AccountSwitcher;\nvar _c;\n$RefreshReg$(_c, \"AccountSwitcher\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AccountSwitcher","_s","isOpen","setIsOpen","accounts","setAccounts","currentAccount","setCurrentAccount","dropdownRef","loadAccounts","savedAccounts","JSON","parse","localStorage","getItem","token","email","username","userId","userRole","split","role","window","addEventListener","removeEventListener","handleClickOutside","event","current","contains","target","document","saveCurrentAccount","existingIndex","findIndex","acc","updatedAccounts","push","setItem","stringify","removeAccount","index","filter","_","i","switchToAccount","account","removeItem","sessionStorage","location","href","getInitials","name","charAt","toUpperCase","getAvatarColor","className","ref","children","onClick","title","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/AccountSwitcher.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './AccountSwitcher.css';\n\nconst AccountSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const dropdownRef = useRef(null);\n\n  // Load saved accounts on component mount\n  useEffect(() => {\n    const loadAccounts = () => {\n      const savedAccounts = JSON.parse(localStorage.getItem('savedAccounts')) || [];\n      setAccounts(savedAccounts);\n      \n      // Check if current user is logged in\n      const token = localStorage.getItem('authToken');\n      const email = localStorage.getItem('userEmail');\n      const username = localStorage.getItem('username');\n      const userId = localStorage.getItem('userId');\n      const userRole = localStorage.getItem('userRole');\n      \n      if (token && email) {\n        setCurrentAccount({\n          email,\n          username: username || email.split('@')[0],\n          userId,\n          role: userRole || 'user'\n        });\n      } else {\n        setCurrentAccount(null);\n      }\n    };\n    \n    loadAccounts();\n    \n    // Add event listener to check for login/logout events\n    window.addEventListener('storage', loadAccounts);\n    return () => window.removeEventListener('storage', loadAccounts);\n  }, []);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  \n  // Save current account\n  const saveCurrentAccount = () => {\n    if (!currentAccount) return;\n    \n    // Check if account already exists\n    const existingIndex = accounts.findIndex(acc => acc.email === currentAccount.email);\n    let updatedAccounts = [...accounts];\n    \n    if (existingIndex >= 0) {\n      // Update existing account\n      updatedAccounts[existingIndex] = currentAccount;\n    } else {\n      // Add new account\n      updatedAccounts.push(currentAccount);\n    }\n    \n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n  \n  // Remove account\n  const removeAccount = (index) => {\n    const updatedAccounts = accounts.filter((_, i) => i !== index);\n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n  \n  // Switch to another account\n  const switchToAccount = (account) => {\n    // Save current account first if logged in\n    if (currentAccount) {\n      saveCurrentAccount();\n    }\n    \n    // Log out current user\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('username');\n    localStorage.removeItem('isAuthenticated');\n    \n    // Save the account data to sessionStorage for login page to use\n    sessionStorage.setItem('switchToAccount', JSON.stringify(account));\n    \n    // Redirect to login page\n    window.location.href = '/login';\n    \n    setIsOpen(false);\n  };\n  \n  // Get initials for avatar\n  const getInitials = (name) => {\n    return name ? name.charAt(0).toUpperCase() : '?';\n  };\n  \n  // Get background color based on user role\n  const getAvatarColor = (role) => {\n    switch (role) {\n      case 'admin':\n        return '#f85444';\n      default:\n        return '#ff9a3c';\n    }\n  };\n  \n  return (\n    <div className=\"account-switcher-container\" ref={dropdownRef}>\n      <button \n        className=\"account-switcher-button\"\n        onClick={() => setIsOpen(!isOpen)}\n        title=\"Account Switcher\"\n      >\n        {currentAccount ? (\n          <div \n            className=\"avatar\"\n            style={{ backgroundColor: getAvatarColor(currentAccount.role) }}\n          >\n            {getInitials(currentAccount.username)}\n          </div>\n        ) : (\n          <div className=\"avatar default-avatar\">?</div>\n        )}\n      </button>\n      \n      {isOpen && (\n        <div className=\"account-dropdown\">\n          <div className=\"dropdown-header\">\n            <h3>Accounts</h3>\n          </div>\n          \n          {currentAccount && (\n            <div className=\"current-account\">\n              <div \n                className=\"avatar\"\n                style={{ backgroundColor: getAvatarColor(currentAccount.role) }}\n              >\n                {getInitials(currentAccount.username)}\n              </div>\n              <div className=\"account-info\">\n                <div className=\"account-name\">{currentAccount.username}</div>\n                <div className=\"account-email\">{currentAccount.email}</div>\n              </div>\n              <button \n                className=\"save-account-btn\"\n                onClick={saveCurrentAccount}\n                title=\"Save this account\"\n              >\n                +\n              </button>\n            </div>\n          )}\n          \n          {accounts.length > 0 && (\n            <div className=\"saved-accounts\">\n              <div className=\"section-title\">Saved Accounts</div>\n              <ul className=\"accounts-list\">\n                {accounts.map((account, index) => (\n                  <li key={index} className=\"account-item\">\n                    <div \n                      className=\"avatar\"\n                      style={{ backgroundColor: getAvatarColor(account.role) }}\n                    >\n                      {getInitials(account.username)}\n                    </div>\n                    <div \n                      className=\"account-info\"\n                      onClick={() => switchToAccount(account)}\n                    >\n                      <div className=\"account-name\">{account.username}</div>\n                      <div className=\"account-email\">{account.email}</div>\n                    </div>\n                    <button \n                      className=\"remove-account-btn\"\n                      onClick={() => removeAccount(index)}\n                      title=\"Remove account\"\n                    >\n                      ×\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          <div className=\"dropdown-footer\">\n            <button \n              className=\"close-btn\"\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AccountSwitcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}