{"ast":null,"code":"var _jsxFileName = \"C:\\\\projeto\\\\gleemanager-1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Login from \"./pages/Login/Login\";\nimport AdminDashboard from \"./pages/Dashboard/AdminDashboard\";\nimport UserDashboard from \"./pages/Dashboard/UserDashboard\";\nimport UserManagement from \"./pages/UserManagement/UserManagement\";\nimport Profile from \"./pages/Profile/Profile\";\nimport ChangePassword from \"./pages/ChangePassword/ChangePassword\";\nimport BaseLayout from \"./components/Layout/BaseLayout\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n  const [mustChangePassword, setMustChangePassword] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in on component mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        setIsAuthenticated(true);\n        setUserRole(localStorage.getItem(\"userRole\") || \"user\");\n\n        // Check if user must change password - IMPORTANT: Convert string to boolean\n        const mustChange = localStorage.getItem(\"mustChangePassword\") === \"true\";\n        console.log(\"Must change password:\", mustChange); // Debug log\n        setMustChangePassword(mustChange);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        // Call the logout endpoint\n        await fetch(\"http://localhost:5000/logout\", {\n          method: \"DELETE\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      // Clear all auth data from localStorage\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"userEmail\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"userRole\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"isAuthenticated\");\n      localStorage.removeItem(\"mustChangePassword\");\n      setIsAuthenticated(false);\n      setUserRole(\"\");\n      setMustChangePassword(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Debug log to help troubleshoot\n  console.log(\"Auth state:\", {\n    isAuthenticated,\n    userRole,\n    mustChangePassword\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n          setIsAuthenticated: setIsAuthenticated,\n          setUserRole: setUserRole,\n          setMustChangePassword: setMustChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this) :\n        // If authenticated but needs to change password, redirect to change password\n        mustChangePassword ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/change-password\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/change-password\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(ChangePassword, {\n          setMustChangePassword: setMustChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ?\n        // If user must change password, redirect to change password page\n        mustChangePassword ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/change-password\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(BaseLayout, {\n          userRole: userRole,\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"user-management\",\n          element: userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(UserManagement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"settings\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Settings Page Coming Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"help\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Help Page Coming Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9KYRJ9smRZlV6Bh5joYh1/n8YiM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Navigate","useState","useEffect","Login","AdminDashboard","UserDashboard","UserManagement","Profile","ChangePassword","BaseLayout","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","userRole","setUserRole","mustChangePassword","setMustChangePassword","loading","setLoading","checkAuth","token","localStorage","getItem","mustChange","console","log","handleLogout","fetch","method","headers","error","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","index","_c","$RefreshReg$"],"sources":["C:/projeto/gleemanager-1/frontend/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport AdminDashboard from \"./pages/Dashboard/AdminDashboard\";\r\nimport UserDashboard from \"./pages/Dashboard/UserDashboard\";\r\nimport UserManagement from \"./pages/UserManagement/UserManagement\";\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport ChangePassword from \"./pages/ChangePassword/ChangePassword\";\r\nimport BaseLayout from \"./components/Layout/BaseLayout\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [mustChangePassword, setMustChangePassword] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // Check if user is already logged in on component mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (token) {\r\n        setIsAuthenticated(true);\r\n        setUserRole(localStorage.getItem(\"userRole\") || \"user\");\r\n        \r\n        // Check if user must change password - IMPORTANT: Convert string to boolean\r\n        const mustChange = localStorage.getItem(\"mustChangePassword\") === \"true\";\r\n        console.log(\"Must change password:\", mustChange); // Debug log\r\n        setMustChangePassword(mustChange);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n  \r\n  const handleLogout = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (token) {\r\n        // Call the logout endpoint\r\n        await fetch(\"http://localhost:5000/logout\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Logout error:\", error);\r\n    } finally {\r\n      // Clear all auth data from localStorage\r\n      localStorage.removeItem(\"authToken\");\r\n      localStorage.removeItem(\"userEmail\");\r\n      localStorage.removeItem(\"userId\");\r\n      localStorage.removeItem(\"userRole\");\r\n      localStorage.removeItem(\"username\");\r\n      localStorage.removeItem(\"isAuthenticated\");\r\n      localStorage.removeItem(\"mustChangePassword\");\r\n      setIsAuthenticated(false);\r\n      setUserRole(\"\");\r\n      setMustChangePassword(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  // Debug log to help troubleshoot\r\n  console.log(\"Auth state:\", { isAuthenticated, userRole, mustChangePassword });\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route \r\n          path=\"/login\" \r\n          element={\r\n            !isAuthenticated ? (\r\n              <Login \r\n                setIsAuthenticated={setIsAuthenticated} \r\n                setUserRole={setUserRole}\r\n                setMustChangePassword={setMustChangePassword}\r\n              />\r\n            ) : (\r\n              // If authenticated but needs to change password, redirect to change password\r\n              mustChangePassword ? (\r\n                <Navigate to=\"/change-password\" replace />\r\n              ) : (\r\n                <Navigate to=\"/\" replace />\r\n              )\r\n            )\r\n          } \r\n        />\r\n        \r\n        {/* Change Password route */}\r\n        <Route\r\n          path=\"/change-password\"\r\n          element={\r\n            isAuthenticated ? (\r\n              <ChangePassword setMustChangePassword={setMustChangePassword} />\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n        \r\n        {/* Protected routes wrapped in BaseLayout */}\r\n        <Route \r\n          path=\"/\" \r\n          element={\r\n            isAuthenticated ? (\r\n              // If user must change password, redirect to change password page\r\n              mustChangePassword ? (\r\n                <Navigate to=\"/change-password\" replace />\r\n              ) : (\r\n                <BaseLayout userRole={userRole} handleLogout={handleLogout} />\r\n              )\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        >\r\n          {/* Dashboard route - renders different dashboard based on role */}\r\n          <Route \r\n            index\r\n            element={\r\n              userRole === \"admin\" ? <AdminDashboard /> : <UserDashboard />\r\n            } \r\n          />\r\n          \r\n          {/* Admin-only routes */}\r\n          <Route \r\n            path=\"user-management\" \r\n            element={\r\n              userRole === \"admin\" ? (\r\n                <UserManagement />\r\n              ) : (\r\n                <Navigate to=\"/\" replace />\r\n              )\r\n            } \r\n          />\r\n          \r\n          {/* Add more routes as needed */}\r\n          <Route path=\"profile\" element={<Profile />} />\r\n          <Route path=\"settings\" element={<div>Settings Page Coming Soon</div>} />\r\n          <Route path=\"help\" element={<div>Help Page Coming Soon</div>} />\r\n        </Route>\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}