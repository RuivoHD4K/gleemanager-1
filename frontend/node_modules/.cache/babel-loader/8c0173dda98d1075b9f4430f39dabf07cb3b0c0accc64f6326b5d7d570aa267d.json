{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\UserManagement\\\\UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UserManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    role: \"user\"\n  });\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Fetch users on component mount\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Update form data when a user is selected\n  useEffect(() => {\n    if (selectedUser) {\n      setFormData({\n        email: selectedUser.email,\n        username: selectedUser.username || \"\",\n        role: selectedUser.role || \"user\"\n      });\n    }\n  }, [selectedUser]);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:5000/users\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"isAuthenticated\");\n          navigate(\"/login\");\n          throw new Error(\"Your session has expired. Please log in again.\");\n        }\n        throw new Error(\"Failed to fetch users\");\n      }\n      const data = await response.json();\n      setUsers(data);\n\n      // Select first user by default if available\n      if (data.length > 0 && !selectedUser) {\n        setSelectedUser(data[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n  };\n  const generateRandomPassword = () => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n    let password = \"\";\n    for (let i = 0; i < 10; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return password;\n  };\n  const handleGeneratePassword = async () => {\n    if (!selectedUser) return;\n    const newPass = generateRandomPassword();\n    setNewPassword(newPass);\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}/password`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          password: newPass\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update password\");\n      }\n      setShowPasswordModal(true);\n    } catch (err) {\n      setError(\"Failed to update password: \" + err.message);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedUser) return;\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update user\");\n      }\n\n      // Refresh user list to show updated data\n      fetchUsers();\n\n      // Update local storage if the current user was updated\n      const currentUserId = localStorage.getItem(\"userId\");\n      if (currentUserId === selectedUser.userId) {\n        localStorage.setItem(\"username\", formData.username || formData.email.split('@')[0]);\n      }\n\n      // Show success message\n      setError(\"User updated successfully!\");\n      setTimeout(() => setError(null), 3000);\n    } catch (err) {\n      setError(\"Failed to update user: \" + err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-indicator\",\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${error.includes(\"successfully\") ? \"success\" : \"error\"}`,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card users-list-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list-container\",\n          children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"users-select-list\",\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleUserSelect(user),\n              className: selectedUser && selectedUser.userId === user.userId ? \"selected\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-list-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"user-email\",\n                    children: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"user-role\",\n                    children: user.role || \"user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)\n            }, user.userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card user-edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"user-edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"role\",\n              name: \"role\",\n              value: formData.role,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save-btn\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"password-btn\",\n              onClick: handleGeneratePassword,\n              children: \"Generate New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), showPasswordModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Password Generated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A new password has been generated for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 53\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-display\",\n          children: newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-note\",\n          children: \"Please copy this password now. You won't be able to view it again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn\",\n          onClick: () => setShowPasswordModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"EOIahztIRTNDx05Po01drfN25K0=\", false, function () {\n  return [useNavigate];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","formData","setFormData","email","username","role","showPasswordModal","setShowPasswordModal","newPassword","setNewPassword","navigate","fetchUsers","token","localStorage","getItem","response","fetch","headers","ok","status","removeItem","Error","data","json","length","err","message","handleInputChange","e","name","value","target","handleUserSelect","user","generateRandomPassword","chars","password","i","charAt","Math","floor","random","handleGeneratePassword","newPass","userId","method","body","JSON","stringify","handleSubmit","preventDefault","currentUserId","setItem","split","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","map","onClick","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/pages/UserManagement/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UserManagement.css\";\n\nconst UserManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    role: \"user\"\n  });\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Fetch users on component mount\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Update form data when a user is selected\n  useEffect(() => {\n    if (selectedUser) {\n      setFormData({\n        email: selectedUser.email,\n        username: selectedUser.username || \"\",\n        role: selectedUser.role || \"user\"\n      });\n    }\n  }, [selectedUser]);\n\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:5000/users\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      \n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"isAuthenticated\");\n          navigate(\"/login\");\n          throw new Error(\"Your session has expired. Please log in again.\");\n        }\n        throw new Error(\"Failed to fetch users\");\n      }\n      \n      const data = await response.json();\n      setUsers(data);\n      \n      // Select first user by default if available\n      if (data.length > 0 && !selectedUser) {\n        setSelectedUser(data[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n  };\n\n  const generateRandomPassword = () => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n    let password = \"\";\n    for (let i = 0; i < 10; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return password;\n  };\n\n  const handleGeneratePassword = async () => {\n    if (!selectedUser) return;\n    \n    const newPass = generateRandomPassword();\n    setNewPassword(newPass);\n    \n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}/password`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({ password: newPass })\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to update password\");\n      }\n      \n      setShowPasswordModal(true);\n    } catch (err) {\n      setError(\"Failed to update password: \" + err.message);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!selectedUser) return;\n    \n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to update user\");\n      }\n      \n      // Refresh user list to show updated data\n      fetchUsers();\n      \n      // Update local storage if the current user was updated\n      const currentUserId = localStorage.getItem(\"userId\");\n      if (currentUserId === selectedUser.userId) {\n        localStorage.setItem(\"username\", formData.username || formData.email.split('@')[0]);\n      }\n      \n      // Show success message\n      setError(\"User updated successfully!\");\n      setTimeout(() => setError(null), 3000);\n    } catch (err) {\n      setError(\"Failed to update user: \" + err.message);\n    }\n  };\n\n  if (loading) return <div className=\"loading-indicator\">Loading users...</div>;\n\n  return (\n    <div className=\"user-management-container\">\n      <div className=\"page-header\">\n        <h1>User Management</h1>\n      </div>\n      \n      {error && (\n        <div className={`notification ${error.includes(\"successfully\") ? \"success\" : \"error\"}`}>\n          {error}\n        </div>\n      )}\n      \n      <div className=\"user-management-grid\">\n        {/* Users list card */}\n        <div className=\"dashboard-card users-list-card\">\n          <h3>Users</h3>\n          <div className=\"users-list-container\">\n            {users.length === 0 ? (\n              <p>No users found</p>\n            ) : (\n              <ul className=\"users-select-list\">\n                {users.map((user) => (\n                  <li \n                    key={user.userId} \n                    onClick={() => handleUserSelect(user)}\n                    className={selectedUser && selectedUser.userId === user.userId ? \"selected\" : \"\"}\n                  >\n                    <div className=\"user-list-item\">\n                      <div className=\"user-info\">\n                        <span className=\"user-email\">{user.email}</span>\n                        <span className=\"user-role\">{user.role || \"user\"}</span>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n        \n        {/* User edit form card */}\n        <div className=\"dashboard-card user-edit-card\">\n          <h3>Edit User</h3>\n          {selectedUser ? (\n            <form onSubmit={handleSubmit} className=\"user-edit-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"role\">Role</label>\n                <select\n                  id=\"role\"\n                  name=\"role\"\n                  value={formData.role}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"user\">User</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n              </div>\n              \n              <div className=\"form-actions\">\n                <button type=\"submit\" className=\"save-btn\">\n                  Save Changes\n                </button>\n                <button \n                  type=\"button\" \n                  className=\"password-btn\"\n                  onClick={handleGeneratePassword}\n                >\n                  Generate New Password\n                </button>\n              </div>\n            </form>\n          ) : (\n            <p>Select a user to edit</p>\n          )}\n        </div>\n      </div>\n      \n      {/* Password modal popup */}\n      {showPasswordModal && (\n        <div className=\"modal-backdrop\">\n          <div className=\"modal-content\">\n            <h3>New Password Generated</h3>\n            <p>\n              A new password has been generated for <strong>{selectedUser.email}</strong>:\n            </p>\n            <div className=\"password-display\">\n              {newPassword}\n            </div>\n            <p className=\"modal-note\">\n              Please copy this password now. You won't be able to view it again.\n            </p>\n            <button \n              className=\"action-btn\"\n              onClick={() => setShowPasswordModal(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}