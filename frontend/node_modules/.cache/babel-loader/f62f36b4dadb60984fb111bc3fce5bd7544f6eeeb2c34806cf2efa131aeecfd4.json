{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\AccountSwitcher.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AccountSwitcher.css';\n\n// Custom hook for draggable elements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useDraggable = (initialPosition = {\n  y: 70\n}) => {\n  _s();\n  const [position, setPosition] = useState(initialPosition);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    y: 0\n  });\n\n  // Load saved position from localStorage\n  useEffect(() => {\n    const savedPosition = localStorage.getItem('accountSwitcherPosition');\n    if (savedPosition) {\n      try {\n        setPosition(JSON.parse(savedPosition));\n      } catch (e) {\n        console.error('Error parsing saved position', e);\n      }\n    }\n  }, []);\n\n  // Save position to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('accountSwitcherPosition', JSON.stringify(position));\n  }, [position]);\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStart({\n      y: e.clientY\n    });\n  };\n  const handleMouseMove = e => {\n    if (!isDragging) return;\n\n    // Calculate new position (only vertical)\n    const deltaY = e.clientY - dragStart.y;\n    const newPosition = {\n      y: position.y + deltaY\n    };\n\n    // Constrain to viewport\n    const viewportHeight = window.innerHeight;\n    if (newPosition.y < 0) newPosition.y = 0;\n    if (newPosition.y > viewportHeight - 100) newPosition.y = viewportHeight - 100;\n    setPosition(newPosition);\n    setDragStart({\n      y: e.clientY\n    });\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  return {\n    position,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    isDragging\n  };\n};\n_s(useDraggable, \"SEtqVi1l55EQ9A5e5UehZuTE2rU=\");\nconst AccountSwitcher = () => {\n  _s2();\n  const [isOpen, setIsOpen] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const dropdownRef = useRef(null);\n\n  // Use the draggable hook\n  const {\n    position,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    isDragging\n  } = useDraggable();\n\n  // Add event listeners for dragging\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  // Load saved accounts on component mount\n  useEffect(() => {\n    const loadAccounts = () => {\n      const savedAccounts = JSON.parse(localStorage.getItem('savedAccounts')) || [];\n      setAccounts(savedAccounts);\n\n      // Check if current user is logged in\n      const token = localStorage.getItem('authToken');\n      const email = localStorage.getItem('userEmail');\n      const username = localStorage.getItem('username');\n      const userId = localStorage.getItem('userId');\n      const userRole = localStorage.getItem('userRole');\n      if (token && email) {\n        setCurrentAccount({\n          email,\n          username: username || email.split('@')[0],\n          userId,\n          role: userRole || 'user'\n        });\n      } else {\n        setCurrentAccount(null);\n      }\n    };\n    loadAccounts();\n\n    // Add event listener to check for login/logout events\n    window.addEventListener('storage', loadAccounts);\n    return () => window.removeEventListener('storage', loadAccounts);\n  }, []);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Save current account\n  const saveCurrentAccount = () => {\n    if (!currentAccount) return;\n\n    // Check if account already exists\n    const existingIndex = accounts.findIndex(acc => acc.email === currentAccount.email);\n    let updatedAccounts = [...accounts];\n    if (existingIndex >= 0) {\n      // Update existing account\n      updatedAccounts[existingIndex] = currentAccount;\n    } else {\n      // Add new account\n      updatedAccounts.push(currentAccount);\n    }\n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n\n  // Remove account\n  const removeAccount = index => {\n    const updatedAccounts = accounts.filter((_, i) => i !== index);\n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n\n  // Switch to another account\n  const switchToAccount = account => {\n    // Save current account first if logged in\n    if (currentAccount) {\n      saveCurrentAccount();\n    }\n\n    // Log out current user\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('username');\n    localStorage.removeItem('isAuthenticated');\n\n    // Save the account data to sessionStorage for login page to use\n    sessionStorage.setItem('switchToAccount', JSON.stringify(account));\n\n    // Redirect to login page\n    window.location.href = '/login';\n    setIsOpen(false);\n  };\n\n  // Get initials for avatar\n  const getInitials = name => {\n    return name ? name.charAt(0).toUpperCase() : '?';\n  };\n\n  // Get background color based on user role\n  const getAvatarColor = role => {\n    switch (role) {\n      case 'admin':\n        return '#f85444';\n      default:\n        return '#ff9a3c';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account-switcher-container\",\n    ref: dropdownRef,\n    style: {\n      top: `${position.y}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"account-switcher-button\",\n      onClick: () => !isDragging && setIsOpen(!isOpen),\n      onMouseDown: handleMouseDown,\n      title: isDragging ? \"Drag to reposition\" : \"Account Switcher\",\n      style: {\n        cursor: isDragging ? \"grabbing\" : \"grab\"\n      },\n      children: currentAccount ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        style: {\n          backgroundColor: getAvatarColor(currentAccount.role)\n        },\n        children: getInitials(currentAccount.username)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar default-avatar\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), currentAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-account\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          style: {\n            backgroundColor: getAvatarColor(currentAccount.role)\n          },\n          children: getInitials(currentAccount.username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-name\",\n            children: currentAccount.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-email\",\n            children: currentAccount.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-account-btn\",\n          onClick: saveCurrentAccount,\n          title: \"Save this account\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-accounts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: \"Saved Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"accounts-list\",\n          children: accounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"account-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              style: {\n                backgroundColor: getAvatarColor(account.role)\n              },\n              children: getInitials(account.username)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account-info\",\n              onClick: () => switchToAccount(account),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-name\",\n                children: account.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-email\",\n                children: account.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-account-btn\",\n              onClick: () => removeAccount(index),\n              title: \"Remove account\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setIsOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s2(AccountSwitcher, \"ea+KcB0ZMAaqMrz+7+Dz5Iv/LXY=\", false, function () {\n  return [useDraggable];\n});\n_c = AccountSwitcher;\nexport default AccountSwitcher;\nvar _c;\n$RefreshReg$(_c, \"AccountSwitcher\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","useDraggable","initialPosition","y","_s","position","setPosition","isDragging","setIsDragging","dragStart","setDragStart","savedPosition","localStorage","getItem","JSON","parse","e","console","error","setItem","stringify","handleMouseDown","clientY","handleMouseMove","deltaY","newPosition","viewportHeight","window","innerHeight","handleMouseUp","AccountSwitcher","_s2","isOpen","setIsOpen","accounts","setAccounts","currentAccount","setCurrentAccount","dropdownRef","document","addEventListener","removeEventListener","loadAccounts","savedAccounts","token","email","username","userId","userRole","split","role","handleClickOutside","event","current","contains","target","saveCurrentAccount","existingIndex","findIndex","acc","updatedAccounts","push","removeAccount","index","filter","_","i","switchToAccount","account","removeItem","sessionStorage","location","href","getInitials","name","charAt","toUpperCase","getAvatarColor","className","ref","style","top","children","onClick","onMouseDown","title","cursor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/AccountSwitcher.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './AccountSwitcher.css';\n\n// Custom hook for draggable elements\nconst useDraggable = (initialPosition = { y: 70 }) => {\n  const [position, setPosition] = useState(initialPosition);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ y: 0 });\n  \n  // Load saved position from localStorage\n  useEffect(() => {\n    const savedPosition = localStorage.getItem('accountSwitcherPosition');\n    if (savedPosition) {\n      try {\n        setPosition(JSON.parse(savedPosition));\n      } catch (e) {\n        console.error('Error parsing saved position', e);\n      }\n    }\n  }, []);\n  \n  // Save position to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('accountSwitcherPosition', JSON.stringify(position));\n  }, [position]);\n  \n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    setDragStart({ y: e.clientY });\n  };\n  \n  const handleMouseMove = (e) => {\n    if (!isDragging) return;\n    \n    // Calculate new position (only vertical)\n    const deltaY = e.clientY - dragStart.y;\n    const newPosition = { y: position.y + deltaY };\n    \n    // Constrain to viewport\n    const viewportHeight = window.innerHeight;\n    if (newPosition.y < 0) newPosition.y = 0;\n    if (newPosition.y > viewportHeight - 100) newPosition.y = viewportHeight - 100;\n    \n    setPosition(newPosition);\n    setDragStart({ y: e.clientY });\n  };\n  \n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  \n  return {\n    position,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    isDragging\n  };\n};\n\nconst AccountSwitcher = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const dropdownRef = useRef(null);\n  \n  // Use the draggable hook\n  const {\n    position,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    isDragging\n  } = useDraggable();\n  \n  // Add event listeners for dragging\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    } else {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    }\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  // Load saved accounts on component mount\n  useEffect(() => {\n    const loadAccounts = () => {\n      const savedAccounts = JSON.parse(localStorage.getItem('savedAccounts')) || [];\n      setAccounts(savedAccounts);\n      \n      // Check if current user is logged in\n      const token = localStorage.getItem('authToken');\n      const email = localStorage.getItem('userEmail');\n      const username = localStorage.getItem('username');\n      const userId = localStorage.getItem('userId');\n      const userRole = localStorage.getItem('userRole');\n      \n      if (token && email) {\n        setCurrentAccount({\n          email,\n          username: username || email.split('@')[0],\n          userId,\n          role: userRole || 'user'\n        });\n      } else {\n        setCurrentAccount(null);\n      }\n    };\n    \n    loadAccounts();\n    \n    // Add event listener to check for login/logout events\n    window.addEventListener('storage', loadAccounts);\n    return () => window.removeEventListener('storage', loadAccounts);\n  }, []);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  \n  // Save current account\n  const saveCurrentAccount = () => {\n    if (!currentAccount) return;\n    \n    // Check if account already exists\n    const existingIndex = accounts.findIndex(acc => acc.email === currentAccount.email);\n    let updatedAccounts = [...accounts];\n    \n    if (existingIndex >= 0) {\n      // Update existing account\n      updatedAccounts[existingIndex] = currentAccount;\n    } else {\n      // Add new account\n      updatedAccounts.push(currentAccount);\n    }\n    \n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n  \n  // Remove account\n  const removeAccount = (index) => {\n    const updatedAccounts = accounts.filter((_, i) => i !== index);\n    localStorage.setItem('savedAccounts', JSON.stringify(updatedAccounts));\n    setAccounts(updatedAccounts);\n  };\n  \n  // Switch to another account\n  const switchToAccount = (account) => {\n    // Save current account first if logged in\n    if (currentAccount) {\n      saveCurrentAccount();\n    }\n    \n    // Log out current user\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('username');\n    localStorage.removeItem('isAuthenticated');\n    \n    // Save the account data to sessionStorage for login page to use\n    sessionStorage.setItem('switchToAccount', JSON.stringify(account));\n    \n    // Redirect to login page\n    window.location.href = '/login';\n    \n    setIsOpen(false);\n  };\n  \n  // Get initials for avatar\n  const getInitials = (name) => {\n    return name ? name.charAt(0).toUpperCase() : '?';\n  };\n  \n  // Get background color based on user role\n  const getAvatarColor = (role) => {\n    switch (role) {\n      case 'admin':\n        return '#f85444';\n      default:\n        return '#ff9a3c';\n    }\n  };\n  \n  return (\n    <div \n      className=\"account-switcher-container\" \n      ref={dropdownRef}\n      style={{ top: `${position.y}px` }}\n    >\n      <button \n        className=\"account-switcher-button\"\n        onClick={() => !isDragging && setIsOpen(!isOpen)}\n        onMouseDown={handleMouseDown}\n        title={isDragging ? \"Drag to reposition\" : \"Account Switcher\"}\n        style={{ cursor: isDragging ? \"grabbing\" : \"grab\" }}\n      >\n        {currentAccount ? (\n          <div \n            className=\"avatar\"\n            style={{ backgroundColor: getAvatarColor(currentAccount.role) }}\n          >\n            {getInitials(currentAccount.username)}\n          </div>\n        ) : (\n          <div className=\"avatar default-avatar\">?</div>\n        )}\n      </button>\n      \n      {isOpen && (\n        <div className=\"account-dropdown\">\n          <div className=\"dropdown-header\">\n            <h3>Accounts</h3>\n          </div>\n          \n          {currentAccount && (\n            <div className=\"current-account\">\n              <div \n                className=\"avatar\"\n                style={{ backgroundColor: getAvatarColor(currentAccount.role) }}\n              >\n                {getInitials(currentAccount.username)}\n              </div>\n              <div className=\"account-info\">\n                <div className=\"account-name\">{currentAccount.username}</div>\n                <div className=\"account-email\">{currentAccount.email}</div>\n              </div>\n              <button \n                className=\"save-account-btn\"\n                onClick={saveCurrentAccount}\n                title=\"Save this account\"\n              >\n                +\n              </button>\n            </div>\n          )}\n          \n          {accounts.length > 0 && (\n            <div className=\"saved-accounts\">\n              <div className=\"section-title\">Saved Accounts</div>\n              <ul className=\"accounts-list\">\n                {accounts.map((account, index) => (\n                  <li key={index} className=\"account-item\">\n                    <div \n                      className=\"avatar\"\n                      style={{ backgroundColor: getAvatarColor(account.role) }}\n                    >\n                      {getInitials(account.username)}\n                    </div>\n                    <div \n                      className=\"account-info\"\n                      onClick={() => switchToAccount(account)}\n                    >\n                      <div className=\"account-name\">{account.username}</div>\n                      <div className=\"account-email\">{account.email}</div>\n                    </div>\n                    <button \n                      className=\"remove-account-btn\"\n                      onClick={() => removeAccount(index)}\n                      title=\"Remove account\"\n                    >\n                      ×\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          <div className=\"dropdown-footer\">\n            <button \n              className=\"close-btn\"\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AccountSwitcher;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}