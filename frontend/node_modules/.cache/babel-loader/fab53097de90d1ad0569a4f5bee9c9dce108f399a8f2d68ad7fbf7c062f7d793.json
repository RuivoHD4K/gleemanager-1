{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager\\\\gleemanager\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    try {\n      // Use POST to authenticate user instead of GET\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Authentication failed\");\n      }\n      if (data.authenticated) {\n        // Store authentication status in localStorage\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n        localStorage.setItem(\"userEmail\", email);\n\n        // Update authentication state\n        setIsAuthenticated(true);\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setError(\"Authentication failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError(\"Email and password are required\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          createdAt: new Date().toISOString()\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to create user\");\n      }\n\n      // Auto login after sign up\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      localStorage.setItem(\"userEmail\", email);\n      setIsAuthenticated(true);\n    } catch (err) {\n      setError(\"Sign up failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to GleeManager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Processing...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignUp,\n            disabled: loading,\n            className: \"signup-btn\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"forgot-password\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"yCbXNlOJJPJVRLyAaaIx7/HBJhw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","setIsAuthenticated","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","authenticated","localStorage","setItem","err","message","handleSignUp","createdAt","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","required","onClick","href","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager/gleemanager/frontend/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      // Use POST to authenticate user instead of GET\r\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Authentication failed\");\r\n      }\r\n      \r\n      if (data.authenticated) {\r\n        // Store authentication status in localStorage\r\n        localStorage.setItem(\"isAuthenticated\", \"true\");\r\n        localStorage.setItem(\"userEmail\", email);\r\n        \r\n        // Update authentication state\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Authentication failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email || !password) {\r\n      setError(\"Email and password are required\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n          createdAt: new Date().toISOString(),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to create user\");\r\n      }\r\n      \r\n      // Auto login after sign up\r\n      localStorage.setItem(\"isAuthenticated\", \"true\");\r\n      localStorage.setItem(\"userEmail\", email);\r\n      setIsAuthenticated(true);\r\n    } catch (err) {\r\n      setError(\"Sign up failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Login to GleeManager</h2>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <form onSubmit={handleLogin}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            disabled={loading}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            disabled={loading}\r\n            required\r\n          />\r\n          <div className=\"button-group\">\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? \"Processing...\" : \"Login\"}\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              onClick={handleSignUp} \r\n              disabled={loading}\r\n              className=\"signup-btn\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <a href=\"#\" className=\"forgot-password\">Forgot Password?</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}