{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\UserManagement\\\\UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./UserManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [notification, setNotification] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    username: \"\",\n    role: \"user\"\n  });\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [newUserData, setNewUserData] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    role: \"user\"\n  });\n\n  // Authentication modal states\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [adminPassword, setAdminPassword] = useState(\"\");\n  const [authError, setAuthError] = useState(\"\");\n  const [pendingAction, setPendingAction] = useState(null);\n\n  // Delete confirmation modal state\n  const [showDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n\n  // Store the original generated password\n  const [originalGeneratedPassword, setOriginalGeneratedPassword] = useState(\"\");\n  const [isCustomPassword, setIsCustomPassword] = useState(false);\n  const [isPasswordEditable, setIsPasswordEditable] = useState(false);\n  const navigate = useNavigate();\n\n  // Fetch users on component mount\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Update form data when a user is selected\n  useEffect(() => {\n    if (selectedUser) {\n      setFormData({\n        email: selectedUser.email,\n        username: selectedUser.username || \"\",\n        role: selectedUser.role || \"user\"\n      });\n    }\n  }, [selectedUser]);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:5000/users\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem(\"authToken\");\n          localStorage.removeItem(\"isAuthenticated\");\n          navigate(\"/login\");\n          throw new Error(\"Your session has expired. Please log in again.\");\n        }\n        throw new Error(\"Failed to fetch users\");\n      }\n      const data = await response.json();\n      setUsers(data);\n\n      // Select first user by default if available\n      if (data.length > 0 && !selectedUser) {\n        setSelectedUser(data[0]);\n      }\n    } catch (err) {\n      showNotification(err.message, \"error\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleNewUserInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewUserData({\n      ...newUserData,\n      [name]: value\n    });\n  };\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n  };\n  const generateRandomPassword = () => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n    let password = \"\";\n    for (let i = 0; i < 10; i++) {\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return password;\n  };\n\n  // Initiates the password generation process with authentication\n  const initiatePasswordGeneration = () => {\n    if (!selectedUser) return;\n\n    // Set the pending action\n    setPendingAction('generatePassword');\n    // Open auth modal\n    setShowAuthModal(true);\n    // Reset any previous errors\n    setAuthError(\"\");\n    setAdminPassword(\"\");\n  };\n\n  // Actual password generation after authentication\n  const handleGeneratePassword = async () => {\n    if (!selectedUser) return;\n    const newPass = generateRandomPassword();\n    setNewPassword(newPass);\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}/password`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          password: newPass\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update password\");\n      }\n\n      // The server will set mustChangePassword to true for admin password resets\n\n      // Update user list to reflect the change\n      const updatedUser = {\n        ...selectedUser,\n        mustChangePassword: true\n      };\n      setUsers(users.map(user => user.userId === selectedUser.userId ? updatedUser : user));\n      setSelectedUser(updatedUser);\n      setShowPasswordModal(true);\n    } catch (err) {\n      showNotification(\"Failed to update password: \" + err.message, \"error\");\n    }\n  };\n\n  // Initiates the delete user process with authentication\n  const initiateDeleteUser = () => {\n    if (!selectedUser) return;\n\n    // Cannot delete yourself\n    const currentUserId = localStorage.getItem(\"userId\");\n    if (currentUserId === selectedUser.userId) {\n      showNotification(\"You cannot delete your own account\", \"error\");\n      return;\n    }\n\n    // Set the pending action\n    setPendingAction('deleteUser');\n    // Open auth modal\n    setShowAuthModal(true);\n    // Reset any previous errors\n    setAuthError(\"\");\n    setAdminPassword(\"\");\n  };\n\n  // Opens the delete confirmation modal after authentication\n  const showDeleteConfirmation = () => {\n    setShowDeleteConfirmModal(true);\n  };\n\n  // Actual delete user function\n  const handleDeleteUser = async () => {\n    if (!selectedUser) return;\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete user\");\n      }\n\n      // Remove user from the state\n      const updatedUsers = users.filter(user => user.userId !== selectedUser.userId);\n      setUsers(updatedUsers);\n\n      // Select first user after deletion if available\n      if (updatedUsers.length > 0) {\n        setSelectedUser(updatedUsers[0]);\n      } else {\n        setSelectedUser(null);\n      }\n\n      // Close the confirmation modal\n      setShowDeleteConfirmModal(false);\n      showNotification(\"User deleted successfully\", \"success\");\n    } catch (err) {\n      showNotification(\"Failed to delete user: \" + err.message, \"error\");\n    }\n  };\n\n  // Handle authentication for sensitive actions\n  const handleAuthenticate = async e => {\n    e.preventDefault();\n    if (!adminPassword) {\n      setAuthError(\"Password is required\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const currentUserEmail = localStorage.getItem(\"userEmail\");\n\n      // Make authentication request\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: currentUserEmail,\n          password: adminPassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok || !data.authenticated) {\n        setAuthError(\"Invalid password\");\n        return;\n      }\n\n      // Close the auth modal\n      setShowAuthModal(false);\n      setAdminPassword(\"\");\n\n      // Proceed with the pending action\n      if (pendingAction === 'generatePassword') {\n        handleGeneratePassword();\n      } else if (pendingAction === 'deleteUser') {\n        showDeleteConfirmation();\n      }\n    } catch (err) {\n      setAuthError(\"Authentication failed: \" + err.message);\n    }\n  };\n  const togglePasswordEditMode = () => {\n    // If switching to edit mode\n    if (!isPasswordEditable) {\n      setIsPasswordEditable(true);\n      setIsCustomPassword(true);\n    } else {\n      // Switching back to generated password\n      setIsPasswordEditable(false);\n      setIsCustomPassword(false);\n      // Restore the original generated password\n      setNewUserData({\n        ...newUserData,\n        password: originalGeneratedPassword\n      });\n    }\n  };\n  const handleCreateNewUser = () => {\n    // Generate a random password for the new user\n    const randomPassword = generateRandomPassword();\n\n    // Reset form data with generated password\n    setNewUserData({\n      email: \"\",\n      username: \"\",\n      password: randomPassword,\n      role: \"user\"\n    });\n\n    // Store the original generated password\n    setOriginalGeneratedPassword(randomPassword);\n\n    // Reset custom password state\n    setIsCustomPassword(false);\n    setIsPasswordEditable(false);\n    setShowAddUserModal(true);\n  };\n  const handleAddNewUser = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!newUserData.email || !newUserData.password || !newUserData.username) {\n      showNotification(\"All fields are required\", \"error\");\n      return;\n    }\n    if (newUserData.password.length < 8) {\n      showNotification(\"Password must be at least 8 characters long\", \"error\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          email: newUserData.email,\n          password: newUserData.password,\n          username: newUserData.username,\n          role: newUserData.role,\n          createdAt: new Date().toISOString(),\n          // Only set mustChangePassword to true if it's not a custom password\n          mustChangePassword: !isCustomPassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to create user\");\n      }\n      const result = await response.json();\n\n      // Add new user to state\n      const newUser = result.user;\n      setUsers([...users, {\n        ...newUser,\n        mustChangePassword: !isCustomPassword\n      }]);\n\n      // Select newly created user\n      setSelectedUser({\n        ...newUser,\n        mustChangePassword: !isCustomPassword\n      });\n      setShowAddUserModal(false);\n      showNotification(`User ${newUserData.email} created successfully!`, \"success\");\n\n      // Refresh user list\n      fetchUsers();\n    } catch (err) {\n      showNotification(\"Failed to create user: \" + err.message, \"error\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedUser) return;\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...formData,\n          // Preserve the mustChangePassword flag\n          mustChangePassword: selectedUser.mustChangePassword\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update user\");\n      }\n\n      // Refresh user list to show updated data\n      fetchUsers();\n\n      // Update local storage if the current user was updated\n      const currentUserId = localStorage.getItem(\"userId\");\n      if (currentUserId === selectedUser.userId) {\n        localStorage.setItem(\"username\", formData.username || formData.email.split('@')[0]);\n      }\n\n      // Show success message\n      showNotification(\"User updated successfully!\", \"success\");\n    } catch (err) {\n      showNotification(\"Failed to update user: \" + err.message, \"error\");\n    }\n  };\n  const showNotification = (message, type = \"info\") => {\n    setNotification({\n      message,\n      type\n    });\n\n    // Auto-clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-indicator\",\n    children: \"Loading users...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 23\n  }, this);\n\n  // SVG icons for buttons\n  const PencilIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"14\",\n    height: \"14\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n  const RefreshIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"14\",\n    height: \"14\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M21 3v5h-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M3 21v-5h5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn\",\n          onClick: handleCreateNewUser,\n          children: \"+ New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification ${notification.type}`,\n      children: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-management-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card users-list-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list-container\",\n          children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"users-select-list\",\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleUserSelect(user),\n              className: selectedUser && selectedUser.userId === user.userId ? \"selected\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-list-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"user-email\",\n                    children: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"user-role\",\n                    children: user.role || \"user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 25\n                  }, this), user.mustChangePassword && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"password-status\",\n                    children: \"Password change required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this)\n            }, user.userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card user-edit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), selectedUser ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"user-edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"role\",\n              name: \"role\",\n              value: formData.role,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-status-display\",\n            children: selectedUser.mustChangePassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-change-required\",\n              children: \"Password change required on next login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-status-ok\",\n              children: \"Password status: OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-buttons-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"action-btn save-btn\",\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"action-btn password-btn\",\n                onClick: initiatePasswordGeneration,\n                children: \"Generate New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"action-btn delete-btn\",\n              onClick: initiateDeleteUser,\n              children: \"Delete User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a user to edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), showPasswordModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Password Generated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A new password has been generated for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 53\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-password-display\",\n          children: newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-note\",\n          children: \"Please copy this password now. You won't be able to view it again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), \" The user will be required to change this password on next login.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-btn\",\n          onClick: () => setShowPasswordModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }, this), showAddUserModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddNewUser,\n          className: \"user-edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"new-email\",\n              name: \"email\",\n              value: newUserData.email,\n              onChange: handleNewUserInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"new-username\",\n              name: \"username\",\n              value: newUserData.username,\n              onChange: handleNewUserInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `password-display-container ${isPasswordEditable ? 'editable' : ''}`,\n              children: [isPasswordEditable ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"new-password\",\n                name: \"password\",\n                value: newUserData.password,\n                onChange: handleNewUserInputChange,\n                className: \"custom-password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-display\",\n                children: newUserData.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"edit-password-btn\",\n                onClick: togglePasswordEditMode,\n                title: isPasswordEditable ? \"Use generated password\" : \"Set custom password\",\n                children: isPasswordEditable ? /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 43\n                }, this) : /*#__PURE__*/_jsxDEV(PencilIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"form-help\",\n              children: isCustomPassword ? \"Custom password will not require a change on first login.\" : \"The user will be required to change this password on first login.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"new-role\",\n              name: \"role\",\n              value: newUserData.role,\n              onChange: handleNewUserInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"action-btn save-btn\",\n              children: \"Create User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"action-btn password-btn\",\n              onClick: () => setShowAddUserModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }, this), showAuthModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Authentication Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter your password to continue with this action.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAuthenticate,\n          className: \"auth-form\",\n          children: [authError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-error\",\n            children: authError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"admin-password\",\n              children: \"Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"admin-password\",\n              value: adminPassword,\n              onChange: e => setAdminPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"action-btn save-btn\",\n              children: \"Authenticate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"action-btn cancel-btn\",\n              onClick: () => {\n                setShowAuthModal(false);\n                setPendingAction(null);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 9\n    }, this), showDeleteConfirmModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete the user \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedUser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 56\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning-text\",\n          children: \"This action cannot be undone. All data associated with this user will be permanently deleted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn delete-btn\",\n            onClick: handleDeleteUser,\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn cancel-btn\",\n            onClick: () => setShowDeleteConfirmModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"3jJV+7eN28Qu8ModtSLvJg+/6Qo=\", false, function () {\n  return [useNavigate];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","loading","setLoading","notification","setNotification","selectedUser","setSelectedUser","formData","setFormData","email","username","role","showPasswordModal","setShowPasswordModal","newPassword","setNewPassword","showAddUserModal","setShowAddUserModal","newUserData","setNewUserData","password","showAuthModal","setShowAuthModal","adminPassword","setAdminPassword","authError","setAuthError","pendingAction","setPendingAction","showDeleteConfirmModal","setShowDeleteConfirmModal","originalGeneratedPassword","setOriginalGeneratedPassword","isCustomPassword","setIsCustomPassword","isPasswordEditable","setIsPasswordEditable","navigate","fetchUsers","token","localStorage","getItem","response","fetch","headers","ok","status","removeItem","Error","data","json","length","err","showNotification","message","handleInputChange","e","name","value","target","handleNewUserInputChange","handleUserSelect","user","generateRandomPassword","chars","i","charAt","Math","floor","random","initiatePasswordGeneration","handleGeneratePassword","newPass","userId","method","body","JSON","stringify","updatedUser","mustChangePassword","map","initiateDeleteUser","currentUserId","showDeleteConfirmation","handleDeleteUser","updatedUsers","filter","handleAuthenticate","preventDefault","currentUserEmail","authenticated","togglePasswordEditMode","handleCreateNewUser","randomPassword","handleAddNewUser","createdAt","Date","toISOString","result","newUser","handleSubmit","setItem","split","type","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","PencilIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","RefreshIcon","onClick","onSubmit","htmlFor","id","onChange","required","title","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/pages/UserManagement/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./UserManagement.css\";\r\n\r\nconst UserManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notification, setNotification] = useState(null);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    role: \"user\"\r\n  });\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\r\n  const [newUserData, setNewUserData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    role: \"user\"\r\n  });\r\n  \r\n  // Authentication modal states\r\n  const [showAuthModal, setShowAuthModal] = useState(false);\r\n  const [adminPassword, setAdminPassword] = useState(\"\");\r\n  const [authError, setAuthError] = useState(\"\");\r\n  const [pendingAction, setPendingAction] = useState(null);\r\n  \r\n  // Delete confirmation modal state\r\n  const [showDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\r\n  \r\n  // Store the original generated password\r\n  const [originalGeneratedPassword, setOriginalGeneratedPassword] = useState(\"\");\r\n  const [isCustomPassword, setIsCustomPassword] = useState(false);\r\n  const [isPasswordEditable, setIsPasswordEditable] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch users on component mount\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Update form data when a user is selected\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      setFormData({\r\n        email: selectedUser.email,\r\n        username: selectedUser.username || \"\",\r\n        role: selectedUser.role || \"user\"\r\n      });\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(\"http://localhost:5000/users\", {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem(\"authToken\");\r\n          localStorage.removeItem(\"isAuthenticated\");\r\n          navigate(\"/login\");\r\n          throw new Error(\"Your session has expired. Please log in again.\");\r\n        }\r\n        throw new Error(\"Failed to fetch users\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setUsers(data);\r\n      \r\n      // Select first user by default if available\r\n      if (data.length > 0 && !selectedUser) {\r\n        setSelectedUser(data[0]);\r\n      }\r\n    } catch (err) {\r\n      showNotification(err.message, \"error\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleNewUserInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewUserData({\r\n      ...newUserData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleUserSelect = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const generateRandomPassword = () => {\r\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\r\n    let password = \"\";\r\n    for (let i = 0; i < 10; i++) {\r\n      password += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return password;\r\n  };\r\n\r\n  // Initiates the password generation process with authentication\r\n  const initiatePasswordGeneration = () => {\r\n    if (!selectedUser) return;\r\n    \r\n    // Set the pending action\r\n    setPendingAction('generatePassword');\r\n    // Open auth modal\r\n    setShowAuthModal(true);\r\n    // Reset any previous errors\r\n    setAuthError(\"\");\r\n    setAdminPassword(\"\");\r\n  };\r\n\r\n  // Actual password generation after authentication\r\n  const handleGeneratePassword = async () => {\r\n    if (!selectedUser) return;\r\n    \r\n    const newPass = generateRandomPassword();\r\n    setNewPassword(newPass);\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}/password`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ password: newPass })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update password\");\r\n      }\r\n      \r\n      // The server will set mustChangePassword to true for admin password resets\r\n      \r\n      // Update user list to reflect the change\r\n      const updatedUser = {...selectedUser, mustChangePassword: true};\r\n      setUsers(users.map(user => \r\n        user.userId === selectedUser.userId ? updatedUser : user\r\n      ));\r\n      setSelectedUser(updatedUser);\r\n      \r\n      setShowPasswordModal(true);\r\n    } catch (err) {\r\n      showNotification(\"Failed to update password: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  // Initiates the delete user process with authentication\r\n  const initiateDeleteUser = () => {\r\n    if (!selectedUser) return;\r\n    \r\n    // Cannot delete yourself\r\n    const currentUserId = localStorage.getItem(\"userId\");\r\n    if (currentUserId === selectedUser.userId) {\r\n      showNotification(\"You cannot delete your own account\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    // Set the pending action\r\n    setPendingAction('deleteUser');\r\n    // Open auth modal\r\n    setShowAuthModal(true);\r\n    // Reset any previous errors\r\n    setAuthError(\"\");\r\n    setAdminPassword(\"\");\r\n  };\r\n\r\n  // Opens the delete confirmation modal after authentication\r\n  const showDeleteConfirmation = () => {\r\n    setShowDeleteConfirmModal(true);\r\n  };\r\n\r\n  // Actual delete user function\r\n  const handleDeleteUser = async () => {\r\n    if (!selectedUser) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete user\");\r\n      }\r\n      \r\n      // Remove user from the state\r\n      const updatedUsers = users.filter(user => user.userId !== selectedUser.userId);\r\n      setUsers(updatedUsers);\r\n      \r\n      // Select first user after deletion if available\r\n      if (updatedUsers.length > 0) {\r\n        setSelectedUser(updatedUsers[0]);\r\n      } else {\r\n        setSelectedUser(null);\r\n      }\r\n      \r\n      // Close the confirmation modal\r\n      setShowDeleteConfirmModal(false);\r\n      \r\n      showNotification(\"User deleted successfully\", \"success\");\r\n    } catch (err) {\r\n      showNotification(\"Failed to delete user: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  // Handle authentication for sensitive actions\r\n  const handleAuthenticate = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!adminPassword) {\r\n      setAuthError(\"Password is required\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const currentUserEmail = localStorage.getItem(\"userEmail\");\r\n      \r\n      // Make authentication request\r\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          email: currentUserEmail, \r\n          password: adminPassword \r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok || !data.authenticated) {\r\n        setAuthError(\"Invalid password\");\r\n        return;\r\n      }\r\n      \r\n      // Close the auth modal\r\n      setShowAuthModal(false);\r\n      setAdminPassword(\"\");\r\n      \r\n      // Proceed with the pending action\r\n      if (pendingAction === 'generatePassword') {\r\n        handleGeneratePassword();\r\n      } else if (pendingAction === 'deleteUser') {\r\n        showDeleteConfirmation();\r\n      }\r\n      \r\n    } catch (err) {\r\n      setAuthError(\"Authentication failed: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const togglePasswordEditMode = () => {\r\n    // If switching to edit mode\r\n    if (!isPasswordEditable) {\r\n      setIsPasswordEditable(true);\r\n      setIsCustomPassword(true);\r\n    } else {\r\n      // Switching back to generated password\r\n      setIsPasswordEditable(false);\r\n      setIsCustomPassword(false);\r\n      // Restore the original generated password\r\n      setNewUserData({\r\n        ...newUserData,\r\n        password: originalGeneratedPassword\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCreateNewUser = () => {\r\n    // Generate a random password for the new user\r\n    const randomPassword = generateRandomPassword();\r\n    \r\n    // Reset form data with generated password\r\n    setNewUserData({\r\n      email: \"\",\r\n      username: \"\",\r\n      password: randomPassword,\r\n      role: \"user\"\r\n    });\r\n    \r\n    // Store the original generated password\r\n    setOriginalGeneratedPassword(randomPassword);\r\n    \r\n    // Reset custom password state\r\n    setIsCustomPassword(false);\r\n    setIsPasswordEditable(false);\r\n    \r\n    setShowAddUserModal(true);\r\n  };\r\n\r\n  const handleAddNewUser = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Basic validation\r\n    if (!newUserData.email || !newUserData.password || !newUserData.username) {\r\n      showNotification(\"All fields are required\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    if (newUserData.password.length < 8) {\r\n      showNotification(\"Password must be at least 8 characters long\", \"error\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          email: newUserData.email,\r\n          password: newUserData.password,\r\n          username: newUserData.username,\r\n          role: newUserData.role,\r\n          createdAt: new Date().toISOString(),\r\n          // Only set mustChangePassword to true if it's not a custom password\r\n          mustChangePassword: !isCustomPassword\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to create user\");\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      // Add new user to state\r\n      const newUser = result.user;\r\n      setUsers([...users, {...newUser, mustChangePassword: !isCustomPassword}]);\r\n      \r\n      // Select newly created user\r\n      setSelectedUser({...newUser, mustChangePassword: !isCustomPassword});\r\n      \r\n      setShowAddUserModal(false);\r\n      showNotification(`User ${newUserData.email} created successfully!`, \"success\");\r\n      \r\n      // Refresh user list\r\n      fetchUsers();\r\n    } catch (err) {\r\n      showNotification(\"Failed to create user: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedUser) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(`http://localhost:5000/users/${selectedUser.userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          // Preserve the mustChangePassword flag\r\n          mustChangePassword: selectedUser.mustChangePassword\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update user\");\r\n      }\r\n      \r\n      // Refresh user list to show updated data\r\n      fetchUsers();\r\n      \r\n      // Update local storage if the current user was updated\r\n      const currentUserId = localStorage.getItem(\"userId\");\r\n      if (currentUserId === selectedUser.userId) {\r\n        localStorage.setItem(\"username\", formData.username || formData.email.split('@')[0]);\r\n      }\r\n      \r\n      // Show success message\r\n      showNotification(\"User updated successfully!\", \"success\");\r\n    } catch (err) {\r\n      showNotification(\"Failed to update user: \" + err.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const showNotification = (message, type = \"info\") => {\r\n    setNotification({ message, type });\r\n    \r\n    // Auto-clear notification after 5 seconds\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  if (loading) return <div className=\"loading-indicator\">Loading users...</div>;\r\n\r\n  // SVG icons for buttons\r\n  const PencilIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n      <path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3Z\"></path>\r\n    </svg>\r\n  );\r\n\r\n  const RefreshIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n      <path d=\"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\"></path>\r\n      <path d=\"M21 3v5h-5\"></path>\r\n      <path d=\"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\"></path>\r\n      <path d=\"M3 21v-5h5\"></path>\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <div className=\"page-header\">\r\n        <h1>User Management</h1>\r\n        <div className=\"page-actions\">\r\n          <button className=\"action-btn\" onClick={handleCreateNewUser}>\r\n            + New User\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {notification && (\r\n        <div className={`notification ${notification.type}`}>\r\n          {notification.message}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"user-management-grid\">\r\n        {/* Users list card */}\r\n        <div className=\"dashboard-card users-list-card\">\r\n          <h3>Users</h3>\r\n          <div className=\"users-list-container\">\r\n            {users.length === 0 ? (\r\n              <p>No users found</p>\r\n            ) : (\r\n              <ul className=\"users-select-list\">\r\n                {users.map((user) => (\r\n                  <li \r\n                    key={user.userId} \r\n                    onClick={() => handleUserSelect(user)}\r\n                    className={selectedUser && selectedUser.userId === user.userId ? \"selected\" : \"\"}\r\n                  >\r\n                    <div className=\"user-list-item\">\r\n                      <div className=\"user-info\">\r\n                        <span className=\"user-email\">{user.email}</span>\r\n                        <span className=\"user-role\">{user.role || \"user\"}</span>\r\n                        {user.mustChangePassword && (\r\n                          <span className=\"password-status\">Password change required</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* User edit form card */}\r\n        <div className=\"dashboard-card user-edit-card\">\r\n          <h3>Edit User</h3>\r\n          {selectedUser ? (\r\n            <form onSubmit={handleSubmit} className=\"user-edit-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"role\">Role</label>\r\n                <select\r\n                  id=\"role\"\r\n                  name=\"role\"\r\n                  value={formData.role}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <option value=\"user\">User</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"password-status-display\">\r\n                {selectedUser.mustChangePassword ? (\r\n                  <div className=\"password-change-required\">\r\n                    Password change required on next login\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"password-status-ok\">\r\n                    Password status: OK\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"form-actions\">\r\n                <div className=\"action-buttons-left\">\r\n                  <button type=\"submit\" className=\"action-btn save-btn\">\r\n                    Save Changes\r\n                  </button>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"action-btn password-btn\"\r\n                    onClick={initiatePasswordGeneration}\r\n                  >\r\n                    Generate New Password\r\n                  </button>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"action-btn delete-btn\"\r\n                  onClick={initiateDeleteUser}\r\n                >\r\n                  Delete User\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <p>Select a user to edit</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Password modal popup */}\r\n      {showPasswordModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>New Password Generated</h3>\r\n            <p>\r\n              A new password has been generated for <strong>{selectedUser.email}</strong>:\r\n            </p>\r\n            <div className=\"modal-password-display\">\r\n              {newPassword}\r\n            </div>\r\n            <p className=\"modal-note\">\r\n              Please copy this password now. You won't be able to view it again.\r\n            </p>\r\n            <p className=\"modal-note\">\r\n              <strong>Note:</strong> The user will be required to change this password on next login.\r\n            </p>\r\n            <button \r\n              className=\"action-btn\"\r\n              onClick={() => setShowPasswordModal(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add User Modal */}\r\n      {showAddUserModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>Add New User</h3>\r\n            <form onSubmit={handleAddNewUser} className=\"user-edit-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"new-email\"\r\n                  name=\"email\"\r\n                  value={newUserData.email}\r\n                  onChange={handleNewUserInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"new-username\"\r\n                  name=\"username\"\r\n                  value={newUserData.username}\r\n                  onChange={handleNewUserInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-password\">Password</label>\r\n                <div className={`password-display-container ${isPasswordEditable ? 'editable' : ''}`}>\r\n                  {isPasswordEditable ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"new-password\"\r\n                      name=\"password\"\r\n                      value={newUserData.password}\r\n                      onChange={handleNewUserInputChange}\r\n                      className=\"custom-password\"\r\n                      required\r\n                    />\r\n                  ) : (\r\n                    <div className=\"password-display\">\r\n                      {newUserData.password}\r\n                    </div>\r\n                  )}\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"edit-password-btn\"\r\n                    onClick={togglePasswordEditMode}\r\n                    title={isPasswordEditable ? \"Use generated password\" : \"Set custom password\"}\r\n                  >\r\n                    {isPasswordEditable ? <RefreshIcon /> : <PencilIcon />}\r\n                  </button>\r\n                </div>\r\n                \r\n                <p className=\"form-help\">\r\n                  {isCustomPassword ? \r\n                    \"Custom password will not require a change on first login.\" : \r\n                    \"The user will be required to change this password on first login.\"}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"new-role\">Role</label>\r\n                <select\r\n                  id=\"new-role\"\r\n                  name=\"role\"\r\n                  value={newUserData.role}\r\n                  onChange={handleNewUserInputChange}\r\n                >\r\n                  <option value=\"user\">User</option>\r\n                  <option value=\"admin\">Admin</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"action-btn save-btn\">\r\n                  Create User\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"action-btn password-btn\"\r\n                  onClick={() => setShowAddUserModal(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Authentication Modal */}\r\n      {showAuthModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>Authentication Required</h3>\r\n            <p>\r\n              Please enter your password to continue with this action.\r\n            </p>\r\n            \r\n            <form onSubmit={handleAuthenticate} className=\"auth-form\">\r\n              {authError && <div className=\"auth-error\">{authError}</div>}\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"admin-password\">Your Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"admin-password\"\r\n                  value={adminPassword}\r\n                  onChange={(e) => setAdminPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"action-btn save-btn\">\r\n                  Authenticate\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  className=\"action-btn cancel-btn\"\r\n                  onClick={() => {\r\n                    setShowAuthModal(false);\r\n                    setPendingAction(null);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {showDeleteConfirmModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal-content\">\r\n            <h3>Confirm Delete User</h3>\r\n            <p>\r\n              Are you sure you want to delete the user <strong>{selectedUser.email}</strong>?\r\n            </p>\r\n            <p className=\"warning-text\">\r\n              This action cannot be undone. All data associated with this user will be permanently deleted.\r\n            </p>\r\n            \r\n            <div className=\"form-actions\">\r\n              <button \r\n                className=\"action-btn delete-btn\"\r\n                onClick={handleDeleteUser}\r\n              >\r\n                Delete User\r\n              </button>\r\n              <button \r\n                className=\"action-btn cancel-btn\"\r\n                onClick={() => setShowDeleteConfirmModal(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}