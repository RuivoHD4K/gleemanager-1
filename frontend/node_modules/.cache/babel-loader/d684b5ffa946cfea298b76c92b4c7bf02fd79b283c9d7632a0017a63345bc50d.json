{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated,\n  setUserRole,\n  setMustChangePassword\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Check if we have a saved account to autofill\n  useEffect(() => {\n    const switchAccount = sessionStorage.getItem('switchToAccount');\n    if (switchAccount) {\n      try {\n        const accountData = JSON.parse(switchAccount);\n        setEmail(accountData.email || '');\n        // Don't auto-fill password for security reasons\n        // Just clear the session storage\n        sessionStorage.removeItem('switchToAccount');\n      } catch (e) {\n        console.error('Error parsing account data', e);\n        sessionStorage.removeItem('switchToAccount');\n      }\n    }\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Authentication failed\");\n      }\n      if (data.authenticated) {\n        const userRole = data.user.role || \"user\";\n        const mustChangePasswordFlag = data.user.mustChangePassword || false;\n\n        // Store token and user info in localStorage\n        localStorage.setItem(\"authToken\", data.token);\n        localStorage.setItem(\"userEmail\", data.user.email);\n        localStorage.setItem(\"userId\", data.user.userId);\n        localStorage.setItem(\"userRole\", userRole);\n        localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]);\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n        localStorage.setItem(\"mustChangePassword\", mustChangePasswordFlag.toString());\n        setSuccessMessage(\"Login successful! Redirecting...\");\n\n        // Update authentication state, user role, and mustChangePassword state\n        setTimeout(() => {\n          setIsAuthenticated(true);\n          setUserRole(userRole);\n          setMustChangePassword(mustChangePasswordFlag);\n        }, 1000);\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setError(\"Authentication failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GleeManager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Management made simple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Processing...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"forgot-password\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"u7F4O8qgBQOqjMIfQed2C8dg2fk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Login","setIsAuthenticated","setUserRole","setMustChangePassword","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","successMessage","setSuccessMessage","switchAccount","sessionStorage","getItem","accountData","JSON","parse","removeItem","e","console","handleLogin","preventDefault","response","fetch","method","headers","body","stringify","data","json","ok","Error","authenticated","userRole","user","role","mustChangePasswordFlag","mustChangePassword","localStorage","setItem","token","userId","username","split","toString","setTimeout","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","required","href","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ setIsAuthenticated, setUserRole, setMustChangePassword }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  // Check if we have a saved account to autofill\r\n  useEffect(() => {\r\n    const switchAccount = sessionStorage.getItem('switchToAccount');\r\n    if (switchAccount) {\r\n      try {\r\n        const accountData = JSON.parse(switchAccount);\r\n        setEmail(accountData.email || '');\r\n        // Don't auto-fill password for security reasons\r\n        // Just clear the session storage\r\n        sessionStorage.removeItem('switchToAccount');\r\n      } catch (e) {\r\n        console.error('Error parsing account data', e);\r\n        sessionStorage.removeItem('switchToAccount');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Authentication failed\");\r\n      }\r\n      \r\n      if (data.authenticated) {\r\n        const userRole = data.user.role || \"user\";\r\n        const mustChangePasswordFlag = data.user.mustChangePassword || false;\r\n        \r\n        // Store token and user info in localStorage\r\n        localStorage.setItem(\"authToken\", data.token);\r\n        localStorage.setItem(\"userEmail\", data.user.email);\r\n        localStorage.setItem(\"userId\", data.user.userId);\r\n        localStorage.setItem(\"userRole\", userRole);\r\n        localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]);\r\n        localStorage.setItem(\"isAuthenticated\", \"true\");\r\n        localStorage.setItem(\"mustChangePassword\", mustChangePasswordFlag.toString());\r\n        \r\n        setSuccessMessage(\"Login successful! Redirecting...\");\r\n        \r\n        // Update authentication state, user role, and mustChangePassword state\r\n        setTimeout(() => {\r\n          setIsAuthenticated(true);\r\n          setUserRole(userRole);\r\n          setMustChangePassword(mustChangePasswordFlag);\r\n        }, 1000);\r\n      } else {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Authentication failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <div className=\"app-logo\">\r\n          <h1>GleeManager</h1>\r\n          <p>Management made simple</p>\r\n        </div>\r\n        \r\n        {error && <div className=\"notification error\">{error}</div>}\r\n        {successMessage && <div className=\"notification success\">{successMessage}</div>}\r\n        \r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"button-group\">\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? \"Processing...\" : \"Login\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <a href=\"#\" className=\"forgot-password\">Forgot Password?</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}