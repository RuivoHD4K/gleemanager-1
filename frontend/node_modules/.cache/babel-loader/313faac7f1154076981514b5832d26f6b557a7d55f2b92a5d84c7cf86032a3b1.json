{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gleemanager_git\\\\gleemanager_1\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\n// In Login.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./Login.css\";\n\n// Update the prop to also receive setUserRole\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated,\n  setUserRole\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Check if we have a saved account to autofill\n  useEffect(() => {\n    const switchAccount = sessionStorage.getItem('switchToAccount');\n    if (switchAccount) {\n      try {\n        const accountData = JSON.parse(switchAccount);\n        setEmail(accountData.email || '');\n        // Don't auto-fill password for security reasons\n        // Just clear the session storage\n        sessionStorage.removeItem('switchToAccount');\n      } catch (e) {\n        console.error('Error parsing account data', e);\n        sessionStorage.removeItem('switchToAccount');\n      }\n    }\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Authentication failed\");\n      }\n      if (data.authenticated) {\n        const userRole = data.user.role || \"user\";\n\n        // Store token and user info in localStorage\n        localStorage.setItem(\"authToken\", data.token);\n        localStorage.setItem(\"userEmail\", data.user.email);\n        localStorage.setItem(\"userId\", data.user.userId);\n        localStorage.setItem(\"userRole\", userRole); // Store user role\n        localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]); // Store username or use email prefix\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n\n        // Update authentication state AND user role state\n        setIsAuthenticated(true);\n        setUserRole(userRole); // Update the userRole state in App.js\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setError(\"Authentication failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError(\"Email and password are required\");\n      return;\n    }\n\n    // Basic password validation\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          createdAt: new Date().toISOString()\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to create user\");\n      }\n      const userRole = data.user.role || \"user\";\n\n      // Store token and user info\n      localStorage.setItem(\"authToken\", data.token);\n      localStorage.setItem(\"userEmail\", data.user.email);\n      localStorage.setItem(\"userId\", data.user.userId);\n      localStorage.setItem(\"userRole\", userRole); // Store user role\n      localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]); // Store username or use email prefix\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n\n      // Update authentication state AND user role state\n      setIsAuthenticated(true);\n      setUserRole(userRole); // Update the userRole state in App.js\n    } catch (err) {\n      setError(\"Sign up failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GleeManager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Management made simple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Processing...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignUp,\n            disabled: loading,\n            className: \"signup-btn\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"forgot-password\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"pUnOH39ivSObBPaiF0wtyVNodTY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Login","setIsAuthenticated","setUserRole","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","switchAccount","sessionStorage","getItem","accountData","JSON","parse","removeItem","e","console","handleLogin","preventDefault","response","fetch","method","headers","body","stringify","data","json","ok","Error","authenticated","userRole","user","role","localStorage","setItem","token","userId","username","split","err","message","handleSignUp","length","createdAt","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","required","onClick","href","_c","$RefreshReg$"],"sources":["C:/Gleemanager_git/gleemanager_1/gleemanager-1/frontend/src/pages/Login/Login.js"],"sourcesContent":["// In Login.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./Login.css\";\n\n// Update the prop to also receive setUserRole\nconst Login = ({ setIsAuthenticated, setUserRole }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Check if we have a saved account to autofill\n  useEffect(() => {\n    const switchAccount = sessionStorage.getItem('switchToAccount');\n    if (switchAccount) {\n      try {\n        const accountData = JSON.parse(switchAccount);\n        setEmail(accountData.email || '');\n        // Don't auto-fill password for security reasons\n        // Just clear the session storage\n        sessionStorage.removeItem('switchToAccount');\n      } catch (e) {\n        console.error('Error parsing account data', e);\n        sessionStorage.removeItem('switchToAccount');\n      }\n    }\n  }, []);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || \"Authentication failed\");\n      }\n      \n      if (data.authenticated) {\n        const userRole = data.user.role || \"user\";\n        \n        // Store token and user info in localStorage\n        localStorage.setItem(\"authToken\", data.token);\n        localStorage.setItem(\"userEmail\", data.user.email);\n        localStorage.setItem(\"userId\", data.user.userId);\n        localStorage.setItem(\"userRole\", userRole); // Store user role\n        localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]); // Store username or use email prefix\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n        \n        // Update authentication state AND user role state\n        setIsAuthenticated(true);\n        setUserRole(userRole); // Update the userRole state in App.js\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setError(\"Authentication failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSignUp = async (e) => {\n    e.preventDefault();\n    \n    if (!email || !password) {\n      setError(\"Email and password are required\");\n      return;\n    }\n    \n    // Basic password validation\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long\");\n      return;\n    }\n    \n    setLoading(true);\n    setError(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          createdAt: new Date().toISOString(),\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to create user\");\n      }\n      \n      const userRole = data.user.role || \"user\";\n      \n      // Store token and user info\n      localStorage.setItem(\"authToken\", data.token);\n      localStorage.setItem(\"userEmail\", data.user.email);\n      localStorage.setItem(\"userId\", data.user.userId);\n      localStorage.setItem(\"userRole\", userRole); // Store user role\n      localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]); // Store username or use email prefix\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      \n      // Update authentication state AND user role state\n      setIsAuthenticated(true);\n      setUserRole(userRole); // Update the userRole state in App.js\n    } catch (err) {\n      setError(\"Sign up failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <div className=\"app-logo\">\n          <h1>GleeManager</h1>\n          <p>Management made simple</p>\n        </div>\n        \n        {error && <p className=\"error-message\">{error}</p>}\n        <form onSubmit={handleLogin}>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            disabled={loading}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            disabled={loading}\n            required\n          />\n          <div className=\"button-group\">\n            <button type=\"submit\" disabled={loading}>\n              {loading ? \"Processing...\" : \"Login\"}\n            </button>\n            <button \n              type=\"button\" \n              onClick={handleSignUp} \n              disabled={loading}\n              className=\"signup-btn\"\n            >\n              Sign Up\n            </button>\n          </div>\n        </form>\n        <a href=\"#\" className=\"forgot-password\">Forgot Password?</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}