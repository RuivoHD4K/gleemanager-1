{"ast":null,"code":"var _jsxFileName = \"C:\\\\projeto\\\\gleemanager-1\\\\frontend\\\\src\\\\pages\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsAuthenticated,\n  setUserRole\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [passwordChangeRequired, setPasswordChangeRequired] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [tempToken, setTempToken] = useState(\"\");\n\n  // Check if we have a saved account to autofill\n  useEffect(() => {\n    const switchAccount = sessionStorage.getItem('switchToAccount');\n    if (switchAccount) {\n      try {\n        const accountData = JSON.parse(switchAccount);\n        setEmail(accountData.email || '');\n        // Don't auto-fill password for security reasons\n        // Just clear the session storage\n        sessionStorage.removeItem('switchToAccount');\n      } catch (e) {\n        console.error('Error parsing account data', e);\n        sessionStorage.removeItem('switchToAccount');\n      }\n    }\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Authentication failed\");\n      }\n      if (data.authenticated) {\n        const userRole = data.user.role || \"user\";\n\n        // Check if password change is required\n        if (data.passwordChangeRequired) {\n          // Save temp token and user ID for password change\n          setTempToken(data.token);\n          setUserId(data.user.userId);\n          setPasswordChangeRequired(true);\n          setSuccessMessage(\"Please set a new password before continuing\");\n          setLoading(false);\n          return;\n        }\n\n        // Store token and user info in localStorage\n        localStorage.setItem(\"authToken\", data.token);\n        localStorage.setItem(\"userEmail\", data.user.email);\n        localStorage.setItem(\"userId\", data.user.userId);\n        localStorage.setItem(\"userRole\", userRole);\n        localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]);\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n        setSuccessMessage(\"Login successful! Redirecting...\");\n\n        // Update authentication state AND user role state\n        setTimeout(() => {\n          setIsAuthenticated(true);\n          setUserRole(userRole);\n        }, 1000);\n      } else {\n        setError(\"Invalid email or password\");\n      }\n    } catch (err) {\n      setError(\"Authentication failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePasswordChange = async e => {\n    e.preventDefault();\n    if (!password || !confirmPassword) {\n      setError(\"Please enter and confirm your new password\");\n      return;\n    }\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      // Update password using the temporary token\n      const response = await fetch(`http://localhost:5000/users/${userId}/password`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${tempToken}`\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Failed to update password\");\n      }\n\n      // Store token and user info in localStorage\n      localStorage.setItem(\"authToken\", tempToken);\n      localStorage.setItem(\"userEmail\", email);\n      localStorage.setItem(\"userId\", userId);\n\n      // Fetch user details again to get role\n      const userResponse = await fetch(`http://localhost:5000/users/${userId}`, {\n        headers: {\n          \"Authorization\": `Bearer ${tempToken}`\n        }\n      });\n      if (userResponse.ok) {\n        const userData = await userResponse.json();\n        localStorage.setItem(\"userRole\", userData.role || \"user\");\n        localStorage.setItem(\"username\", userData.username || email.split('@')[0]);\n      } else {\n        // Use default values if user details can't be fetched\n        localStorage.setItem(\"userRole\", \"user\");\n        localStorage.setItem(\"username\", email.split('@')[0]);\n      }\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      setSuccessMessage(\"Password updated successfully! Redirecting...\");\n\n      // Update authentication state\n      setTimeout(() => {\n        setIsAuthenticated(true);\n        setUserRole(localStorage.getItem(\"userRole\") || \"user\");\n      }, 1000);\n    } catch (err) {\n      setError(\"Password update failed: \" + err.message);\n      setPasswordChangeRequired(false); // Reset to login state\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError(\"Email and password are required\");\n      return;\n    }\n\n    // Basic password validation\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          createdAt: new Date().toISOString()\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to create user\");\n      }\n\n      // Check if password change is required for new user\n      if (data.user.passwordChangeRequired) {\n        // Save temp token and user ID for password change\n        setTempToken(data.token);\n        setUserId(data.user.userId);\n        setPasswordChangeRequired(true);\n        setSuccessMessage(\"Account created! Please set a permanent password\");\n        setLoading(false);\n        return;\n      }\n      const userRole = data.user.role || \"user\";\n\n      // Store token and user info\n      localStorage.setItem(\"authToken\", data.token);\n      localStorage.setItem(\"userEmail\", data.user.email);\n      localStorage.setItem(\"userId\", data.user.userId);\n      localStorage.setItem(\"userRole\", userRole);\n      localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]);\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      setSuccessMessage(\"Account created successfully! Redirecting...\");\n\n      // Update authentication state AND user role state\n      setTimeout(() => {\n        setIsAuthenticated(true);\n        setUserRole(userRole);\n      }, 1000);\n    } catch (err) {\n      setError(\"Sign up failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render password change form if required\n  if (passwordChangeRequired) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"GleeManager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Set Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification success\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlePasswordChange,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"New Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm New Password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"password-requirements\",\n            children: \"Password must be at least 8 characters long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading,\n              children: loading ? \"Processing...\" : \"Set Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Default login form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GleeManager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Management made simple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Processing...\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignUp,\n            disabled: loading,\n            className: \"signup-btn\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"forgot-password\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"I+3GTmVtgCeB3l1ZFjVCurYzJrQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Login","setIsAuthenticated","setUserRole","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","successMessage","setSuccessMessage","passwordChangeRequired","setPasswordChangeRequired","userId","setUserId","tempToken","setTempToken","switchAccount","sessionStorage","getItem","accountData","JSON","parse","removeItem","e","console","handleLogin","preventDefault","response","fetch","method","headers","body","stringify","data","json","ok","Error","authenticated","userRole","user","role","token","localStorage","setItem","username","split","setTimeout","err","message","handlePasswordChange","length","errorData","userResponse","userData","handleSignUp","createdAt","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","required","onClick","href","_c","$RefreshReg$"],"sources":["C:/projeto/gleemanager-1/frontend/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ setIsAuthenticated, setUserRole }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [passwordChangeRequired, setPasswordChangeRequired] = useState(false);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [tempToken, setTempToken] = useState(\"\");\r\n\r\n  // Check if we have a saved account to autofill\r\n  useEffect(() => {\r\n    const switchAccount = sessionStorage.getItem('switchToAccount');\r\n    if (switchAccount) {\r\n      try {\r\n        const accountData = JSON.parse(switchAccount);\r\n        setEmail(accountData.email || '');\r\n        // Don't auto-fill password for security reasons\r\n        // Just clear the session storage\r\n        sessionStorage.removeItem('switchToAccount');\r\n      } catch (e) {\r\n        console.error('Error parsing account data', e);\r\n        sessionStorage.removeItem('switchToAccount');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/authenticate\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Authentication failed\");\r\n      }\r\n      \r\n      if (data.authenticated) {\r\n        const userRole = data.user.role || \"user\";\r\n        \r\n        // Check if password change is required\r\n        if (data.passwordChangeRequired) {\r\n          // Save temp token and user ID for password change\r\n          setTempToken(data.token);\r\n          setUserId(data.user.userId);\r\n          setPasswordChangeRequired(true);\r\n          setSuccessMessage(\"Please set a new password before continuing\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Store token and user info in localStorage\r\n        localStorage.setItem(\"authToken\", data.token);\r\n        localStorage.setItem(\"userEmail\", data.user.email);\r\n        localStorage.setItem(\"userId\", data.user.userId);\r\n        localStorage.setItem(\"userRole\", userRole);\r\n        localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]);\r\n        localStorage.setItem(\"isAuthenticated\", \"true\");\r\n        \r\n        setSuccessMessage(\"Login successful! Redirecting...\");\r\n        \r\n        // Update authentication state AND user role state\r\n        setTimeout(() => {\r\n          setIsAuthenticated(true);\r\n          setUserRole(userRole);\r\n        }, 1000);\r\n      } else {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Authentication failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!password || !confirmPassword) {\r\n      setError(\"Please enter and confirm your new password\");\r\n      return;\r\n    }\r\n    \r\n    if (password.length < 8) {\r\n      setError(\"Password must be at least 8 characters long\");\r\n      return;\r\n    }\r\n    \r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n    \r\n    try {\r\n      // Update password using the temporary token\r\n      const response = await fetch(`http://localhost:5000/users/${userId}/password`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Bearer ${tempToken}`\r\n        },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Failed to update password\");\r\n      }\r\n      \r\n      // Store token and user info in localStorage\r\n      localStorage.setItem(\"authToken\", tempToken);\r\n      localStorage.setItem(\"userEmail\", email);\r\n      localStorage.setItem(\"userId\", userId);\r\n      \r\n      // Fetch user details again to get role\r\n      const userResponse = await fetch(`http://localhost:5000/users/${userId}`, {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${tempToken}`\r\n        }\r\n      });\r\n      \r\n      if (userResponse.ok) {\r\n        const userData = await userResponse.json();\r\n        localStorage.setItem(\"userRole\", userData.role || \"user\");\r\n        localStorage.setItem(\"username\", userData.username || email.split('@')[0]);\r\n      } else {\r\n        // Use default values if user details can't be fetched\r\n        localStorage.setItem(\"userRole\", \"user\");\r\n        localStorage.setItem(\"username\", email.split('@')[0]);\r\n      }\r\n      \r\n      localStorage.setItem(\"isAuthenticated\", \"true\");\r\n      \r\n      setSuccessMessage(\"Password updated successfully! Redirecting...\");\r\n      \r\n      // Update authentication state\r\n      setTimeout(() => {\r\n        setIsAuthenticated(true);\r\n        setUserRole(localStorage.getItem(\"userRole\") || \"user\");\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(\"Password update failed: \" + err.message);\r\n      setPasswordChangeRequired(false); // Reset to login state\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!email || !password) {\r\n      setError(\"Email and password are required\");\r\n      return;\r\n    }\r\n    \r\n    // Basic password validation\r\n    if (password.length < 8) {\r\n      setError(\"Password must be at least 8 characters long\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n          createdAt: new Date().toISOString(),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to create user\");\r\n      }\r\n      \r\n      // Check if password change is required for new user\r\n      if (data.user.passwordChangeRequired) {\r\n        // Save temp token and user ID for password change\r\n        setTempToken(data.token);\r\n        setUserId(data.user.userId);\r\n        setPasswordChangeRequired(true);\r\n        setSuccessMessage(\"Account created! Please set a permanent password\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const userRole = data.user.role || \"user\";\r\n      \r\n      // Store token and user info\r\n      localStorage.setItem(\"authToken\", data.token);\r\n      localStorage.setItem(\"userEmail\", data.user.email);\r\n      localStorage.setItem(\"userId\", data.user.userId);\r\n      localStorage.setItem(\"userRole\", userRole);\r\n      localStorage.setItem(\"username\", data.user.username || data.user.email.split('@')[0]);\r\n      localStorage.setItem(\"isAuthenticated\", \"true\");\r\n      \r\n      setSuccessMessage(\"Account created successfully! Redirecting...\");\r\n      \r\n      // Update authentication state AND user role state\r\n      setTimeout(() => {\r\n        setIsAuthenticated(true);\r\n        setUserRole(userRole);\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(\"Sign up failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Render password change form if required\r\n  if (passwordChangeRequired) {\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <div className=\"app-logo\">\r\n            <h1>GleeManager</h1>\r\n            <p>Set Your Password</p>\r\n          </div>\r\n          \r\n          {error && <div className=\"notification error\">{error}</div>}\r\n          {successMessage && <div className=\"notification success\">{successMessage}</div>}\r\n          \r\n          <form onSubmit={handlePasswordChange}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                disabled={loading}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm New Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                disabled={loading}\r\n                required\r\n              />\r\n            </div>\r\n            <p className=\"password-requirements\">\r\n              Password must be at least 8 characters long\r\n            </p>\r\n            <div className=\"button-group\">\r\n              <button type=\"submit\" disabled={loading}>\r\n                {loading ? \"Processing...\" : \"Set Password\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Default login form\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <div className=\"app-logo\">\r\n          <h1>GleeManager</h1>\r\n          <p>Management made simple</p>\r\n        </div>\r\n        \r\n        {error && <div className=\"notification error\">{error}</div>}\r\n        {successMessage && <div className=\"notification success\">{successMessage}</div>}\r\n        \r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"button-group\">\r\n            <button type=\"submit\" disabled={loading}>\r\n              {loading ? \"Processing...\" : \"Login\"}\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              onClick={handleSignUp} \r\n              disabled={loading}\r\n              className=\"signup-btn\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <a href=\"#\" className=\"forgot-password\">Forgot Password?</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}